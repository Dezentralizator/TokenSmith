{
  "contractName": "GovernorVotes",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "contestId",
          "type": "uint256"
        }
      ],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "contestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registrationEndBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        }
      ],
      "name": "ContestCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "contestId",
          "type": "uint256"
        }
      ],
      "name": "ContestExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "candidate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONTEST_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_lastEntryForContest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "candidate",
          "type": "address"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "contestId",
          "type": "uint256"
        }
      ],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "contestId",
          "type": "uint256"
        }
      ],
      "name": "contestRegistration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "contestId",
          "type": "uint256"
        }
      ],
      "name": "contestVoting",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentParticipants",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "slicedParticipants",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_validParticipants",
          "type": "address[]"
        }
      ],
      "name": "findWinners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "winners",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "contestId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "idOfOpenContests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateContest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "file",
          "type": "string"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registeringDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrationPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "contestId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernorContest.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IVotes",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenToModify",
      "outputs": [
        {
          "internalType": "contract IERC721Version",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "contract SimpleTreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"}],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationEndBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"ContestCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"}],\"name\":\"ContestExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONTEST_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_lastEntryForContest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"}],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"}],\"name\":\"contestRegistration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"}],\"name\":\"contestVoting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentParticipants\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"slicedParticipants\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_validParticipants\",\"type\":\"address[]\"}],\"name\":\"findWinners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"idOfOpenContests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateContest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"file\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registeringDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrationPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernorContest.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IVotes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenToModify\",\"outputs\":[{\"internalType\":\"contract IERC721Version\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"contract SimpleTreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token. _Available since v4.3._\",\"kind\":\"dev\",\"methods\":{\"castVote(address)\":{\"details\":\"See {IGovernor-castVote}.\"},\"contestDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"contestRegistration(uint256)\":{\"details\":\"See {IGovernorContest-contestRegistration}.\"},\"contestVoting(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"execute()\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"hasVoted(uint256,address)\":{\"details\":\"See {IGovernor-hasVoted}.\"},\"idOfOpenContests()\":{\"details\":\"Id of the open contest \"},\"initiateContest()\":{\"details\":\"See {IGovernor-propose}.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\"},\"register(string)\":{\"details\":\"Allows participants to register to the contest.  Note : Maybe add an event?\"},\"registeringDelay()\":{\"details\":\"Delay, in number of block, between the contest is created and the registration starts. This can be increased for various reasons such as : leave time for users to buy voting power, or delegate it, or communicate interests about the reward pool around before the voting of a proposal starts.\"},\"registrationPeriod()\":{\"details\":\"Time, in number of blocks, for the participants to register with their desired file.\"},\"state(uint256)\":{\"details\":\"See {IGovernorContest-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {registeringDelay and registeringPeriod} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"currentParticipants()\":{\"notice\":\"see library documentation - {ArraySlicer} \"},\"idOfOpenContests()\":{\"notice\":\"module:contestCore-LorenzSchmidlin\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"register(string)\":{\"notice\":\"module:contestCore-LorenzSchmidlin\"},\"registeringDelay()\":{\"notice\":\"module:contest-config\"},\"registrationPeriod()\":{\"notice\":\"module:contest-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GovernanceExtensions/GovernorVotes.sol\":\"GovernorVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0db2a6141fa677ae237b5f954d7af76553aa436855d32abca3110d92e9b56ec4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7af446b3a4212749257751ba805faec614b481eea69a2a49c931c9b38a6c7e1c\",\"dweb:/ipfs/QmchQ5ruA6pvh9aGKeQuez9PmuZ7FGQigivYTCSgx7CHj6\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xe1d0cd92e6827b0ca89925a59ec0eadc2b444aa3dd430fecb752a93c36436991\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf6b448bf512c72350a4aaeeb0053e7f112c278cd9bdd7eb04c2f7b40b24f4dc\",\"dweb:/ipfs/Qmd1o6mVH7xLRg6yQ7Hza51bjARb2UA38LXsbTNRG9tvRu\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x089922faffaa6662249c3fbea3bec2dc1d78a145253a4dbf9e91b7df6a434cf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1b83cc2a7127ce6a4ca5c8ffa74013701ebe66d7232717a5acb6572e143d738\",\"dweb:/ipfs/QmWpyQwnkLkz5r4jS69R8Ax5jP6Yp7eNCLjb6gZbfhg3Tm\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol\":{\"keccak256\":\"0x7cdc887a364b6e3f9669bb4b16582e135121437399ac69d41db15012e09b96cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1c4fcd6eafe8f6b8daf541a2cccfcd44368aa0a697c567a5b875edc8c43fea\",\"dweb:/ipfs/QmcN4HhvYveWTtcGfUY3vnzSbJyAtmgvprUW58rDLY7Vdf\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x9bc4d7eb03c4e87fd5122e03cdff5f60fa360d76925980ad022b2c6fac9876f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c6d7cfaac6b54599068126b75474c86ccbbaf386c3581abf82d9cda21b35c81\",\"dweb:/ipfs/QmPZteoCvkiUgv4TZxv2wiEKR5KqM83UCohHnSGw1RytpM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x2e109f03a05809288a1478d4d9fcd0804229207e18d1164ce0597fb0958a159c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9495415607fcbd1c940e726f396c46892af8c8772247c002650deacaf5199fb\",\"dweb:/ipfs/QmagLfEk1NCaJEMVDP3ix9BmXy6mccVUMfKAbWQFtjkjvJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]},\"project:/contracts/ERC721Version.sol\":{\"keccak256\":\"0x75c031699509e9796c73efda0e940391ff1ae81c5b18a2427fe7b62779bab60f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79848548ab93808d4683a5b7a39befd64fcb4125ec77e0f370c8f660b50f1864\",\"dweb:/ipfs/QmPBVyN8cyVmSgUfzVN3UGbEDKJciwDjpn6VMokjZgqWmg\"]},\"project:/contracts/GovernanceExtensions/GovernorContest.sol\":{\"keccak256\":\"0x8251908a80f32a2293ff04da03ecc72b5f90283f306ff2de81cb5a01cadfc3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbc352e84377bd455ae18d0623825859b517b3cb0cfd4d83597ccf36152f7bd\",\"dweb:/ipfs/QmbDpSbGkpL3C3iM6cdTLo6AspyxMQZiMj6jC77UZ4QGcr\"]},\"project:/contracts/GovernanceExtensions/GovernorVotes.sol\":{\"keccak256\":\"0xc1435ae09e7784dd1e5cfdfbea3126e149e69c2b65471339e0bb25c231ca62aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://370b17b2eed3cbdd8a8ee257080e38095f0f07c437fd8f2132d4f2edbfb9764c\",\"dweb:/ipfs/Qmc9EtyJN44dYj7dYdXNVjB95yjd2jYGahj7f5Xm6TZsE3\"]},\"project:/contracts/SimpleTreasury.sol\":{\"keccak256\":\"0x62b0c3fe9c9acbc2d5c88d9c692855f7dfff0d68ca41650c510996f90ba72491\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d122528aa8835871d60083da8d18766d198b7292b7152594ad36de56adbbdbb\",\"dweb:/ipfs/QmZAe8DbpJcAjBhXKhyU2MVVH4E7BEmmk1wDfZCy4mWNCh\"]},\"project:/contracts/interfaces/IERC721Version.sol\":{\"keccak256\":\"0x1c7242bc08bd659ff5ee17b7ff779d7450fa0c56e601962844f97564ce381d98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7ad4826f6a6fe62678a1e0977b096e286aef5fd5bafdd0057c217f708c2071b\",\"dweb:/ipfs/QmWyZU44X9bhh2pjhEv7xAkYXez37m55tuBbZRA2b38Bgt\"]},\"project:/contracts/interfaces/IGovernorContest.sol\":{\"keccak256\":\"0x60106b334ac96385ebe1c0419007a69f0ed537843dc364a994d418bfa6b8b2e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://054511b05cc88b0bad465d57aa5398317de363b084f1df730b8709a9381a16ee\",\"dweb:/ipfs/QmQaFy5TWUAn6Nmkdqf8p4UozqwSMWMCwieAVf5LM5zTrw\"]},\"project:/contracts/interfaces/ISimpleTreasury.sol\":{\"keccak256\":\"0x870ac8509ddfac73e7afb424d0a331183d9bb296e75e16b98d9735e0edf29248\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e30cde919871844928850744dc2a8a2f1a1c1d6c9cbf2965de1674ad94d840e\",\"dweb:/ipfs/QmVxThHkDC5CmEhE8sU22Lo8aJRFEBQgedLTJGrYZxVPrJ\"]},\"project:/contracts/utils/ArraySlicerMemory.sol\":{\"keccak256\":\"0x4c4300c13798c405ceb1302485ee5b4e1f1036a2528ea0277aec40ebe66484ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0336e830b39e97995088b2f63beba0ef70c4257438137fd6749fd890bfe6a57\",\"dweb:/ipfs/QmYyDpU3NptbqjbVQe6kKYenBWv9DfsW5gdBUCezJ2xQ2G\"]},\"project:/contracts/utils/ArraySort.sol\":{\"keccak256\":\"0xa6e0dd063ffc5951b8221d630a18af3e2c971e4fdc331e42729c0585594a9592\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5489f69984c7927a1b078a4a736d19f4112a5901ace5d9a3678a40e9d57e978\",\"dweb:/ipfs/Qme8RriZPAbwpMpyp8dsCdvabeewqWoX8n51gXpjR6jXiy\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (governance/extensions/GovernorVotes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./GovernorContest.sol\";\nimport \"@openzeppelin/contracts/governance/utils/IVotes.sol\";\n\n/**\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorVotes is GovernorContest {\n    IVotes public immutable token;\n\n    constructor(IVotes tokenAddress) {\n        token = tokenAddress;\n    }\n\n    /**\n     * Read the voting weight from the token's built in snapshot mechanism (see {Governor-_getVotes}).\n     */\n    function _getVotes(\n        address account,\n        uint256 blockNumber,\n        bytes memory /*params*/\n    ) internal view virtual override returns (uint256) {\n        return token.getPastVotes(account, blockNumber);\n    }\n}\n",
  "sourcePath": "/Users/admin/Desktop/GeneralCoding/TokenSmith/contracts/GovernanceExtensions/GovernorVotes.sol",
  "ast": {
    "absolutePath": "project:/contracts/GovernanceExtensions/GovernorVotes.sol",
    "exportedSymbols": {
      "Address": [
        4312
      ],
      "Checkpoints": [
        4546
      ],
      "Context": [
        4568
      ],
      "Counters": [
        4642
      ],
      "DoubleEndedQueue": [
        8733
      ],
      "ECDSA": [
        5489
      ],
      "EIP712": [
        5643
      ],
      "ERC165": [
        5667
      ],
      "ERC2981": [
        4017
      ],
      "ERC721": [
        3243
      ],
      "ERC721Enumerable": [
        3715
      ],
      "ERC721Royalty": [
        3761
      ],
      "ERC721Version": [
        9100
      ],
      "Governor": [
        1409
      ],
      "GovernorContest": [
        10162
      ],
      "GovernorVotes": [
        10204
      ],
      "IERC1155Receiver": [
        2298
      ],
      "IERC165": [
        6023
      ],
      "IERC20": [
        2376
      ],
      "IERC2981": [
        2257
      ],
      "IERC721": [
        3359
      ],
      "IERC721Enumerable": [
        3792
      ],
      "IERC721Metadata": [
        3819
      ],
      "IERC721Receiver": [
        3377
      ],
      "IERC721Version": [
        10785
      ],
      "IGovernor": [
        1706
      ],
      "IGovernorContest": [
        10967
      ],
      "ISimpleTreasury": [
        10997
      ],
      "IVotes": [
        1784
      ],
      "Math": [
        6541
      ],
      "Ownable": [
        112
      ],
      "SafeCast": [
        8392
      ],
      "SimpleTreasury": [
        10759
      ],
      "Slicer": [
        11192
      ],
      "Sorter": [
        11365
      ],
      "Strings": [
        4868
      ],
      "Timers": [
        5082
      ],
      "Votes": [
        2238
      ]
    },
    "id": 10205,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10164,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "123:23:36"
      },
      {
        "absolutePath": "project:/contracts/GovernanceExtensions/GovernorContest.sol",
        "file": "./GovernorContest.sol",
        "id": 10165,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10205,
        "sourceUnit": 10163,
        "src": "148:31:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/governance/utils/IVotes.sol",
        "file": "@openzeppelin/contracts/governance/utils/IVotes.sol",
        "id": 10166,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10205,
        "sourceUnit": 1785,
        "src": "180:61:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 10168,
              "name": "GovernorContest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10162,
              "src": "443:15:36"
            },
            "id": 10169,
            "nodeType": "InheritanceSpecifier",
            "src": "443:15:36"
          }
        ],
        "canonicalName": "GovernorVotes",
        "contractDependencies": [
          10759
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 10167,
          "nodeType": "StructuredDocumentation",
          "src": "243:164:36",
          "text": " @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n _Available since v4.3._"
        },
        "fullyImplemented": false,
        "id": 10204,
        "linearizedBaseContracts": [
          10204,
          10162,
          10967,
          5643,
          5667,
          6023,
          4568
        ],
        "name": "GovernorVotes",
        "nameLocation": "426:13:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 10172,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "489:5:36",
            "nodeType": "VariableDeclaration",
            "scope": 10204,
            "src": "465:29:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVotes_$1784",
              "typeString": "contract IVotes"
            },
            "typeName": {
              "id": 10171,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10170,
                "name": "IVotes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1784,
                "src": "465:6:36"
              },
              "referencedDeclaration": 1784,
              "src": "465:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVotes_$1784",
                "typeString": "contract IVotes"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10182,
              "nodeType": "Block",
              "src": "534:37:36",
              "statements": [
                {
                  "expression": {
                    "id": 10180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10178,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10172,
                      "src": "544:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotes_$1784",
                        "typeString": "contract IVotes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10179,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10175,
                      "src": "552:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotes_$1784",
                        "typeString": "contract IVotes"
                      }
                    },
                    "src": "544:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotes_$1784",
                      "typeString": "contract IVotes"
                    }
                  },
                  "id": 10181,
                  "nodeType": "ExpressionStatement",
                  "src": "544:20:36"
                }
              ]
            },
            "id": 10183,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10175,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "520:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 10183,
                  "src": "513:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotes_$1784",
                    "typeString": "contract IVotes"
                  },
                  "typeName": {
                    "id": 10174,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10173,
                      "name": "IVotes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1784,
                      "src": "513:6:36"
                    },
                    "referencedDeclaration": 1784,
                    "src": "513:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotes_$1784",
                      "typeString": "contract IVotes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "512:21:36"
            },
            "returnParameters": {
              "id": 10177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:0:36"
            },
            "scope": 10204,
            "src": "501:70:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              9557
            ],
            "body": {
              "id": 10202,
              "nodeType": "Block",
              "src": "857:64:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10198,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10186,
                        "src": "893:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10199,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10188,
                        "src": "902:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10196,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10172,
                        "src": "874:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotes_$1784",
                          "typeString": "contract IVotes"
                        }
                      },
                      "id": 10197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPastVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1745,
                      "src": "874:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 10200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:40:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10195,
                  "id": 10201,
                  "nodeType": "Return",
                  "src": "867:47:36"
                }
              ]
            },
            "documentation": {
              "id": 10184,
              "nodeType": "StructuredDocumentation",
              "src": "577:114:36",
              "text": " Read the voting weight from the token's built in snapshot mechanism (see {Governor-_getVotes})."
            },
            "id": 10203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getVotes",
            "nameLocation": "705:9:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10192,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "830:8:36"
            },
            "parameters": {
              "id": 10191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10186,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "732:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "724:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10188,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "757:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "749:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "778:12:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "714:93:36"
            },
            "returnParameters": {
              "id": 10195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "848:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:9:36"
            },
            "scope": 10204,
            "src": "696:225:36",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 10205,
        "src": "408:515:36",
        "usedErrors": []
      }
    ],
    "src": "123:801:36"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/GovernanceExtensions/GovernorVotes.sol",
    "exportedSymbols": {
      "Address": [
        4312
      ],
      "Checkpoints": [
        4546
      ],
      "Context": [
        4568
      ],
      "Counters": [
        4642
      ],
      "DoubleEndedQueue": [
        8733
      ],
      "ECDSA": [
        5489
      ],
      "EIP712": [
        5643
      ],
      "ERC165": [
        5667
      ],
      "ERC2981": [
        4017
      ],
      "ERC721": [
        3243
      ],
      "ERC721Enumerable": [
        3715
      ],
      "ERC721Royalty": [
        3761
      ],
      "ERC721Version": [
        9100
      ],
      "Governor": [
        1409
      ],
      "GovernorContest": [
        10162
      ],
      "GovernorVotes": [
        10204
      ],
      "IERC1155Receiver": [
        2298
      ],
      "IERC165": [
        6023
      ],
      "IERC20": [
        2376
      ],
      "IERC2981": [
        2257
      ],
      "IERC721": [
        3359
      ],
      "IERC721Enumerable": [
        3792
      ],
      "IERC721Metadata": [
        3819
      ],
      "IERC721Receiver": [
        3377
      ],
      "IERC721Version": [
        10785
      ],
      "IGovernor": [
        1706
      ],
      "IGovernorContest": [
        10967
      ],
      "ISimpleTreasury": [
        10997
      ],
      "IVotes": [
        1784
      ],
      "Math": [
        6541
      ],
      "Ownable": [
        112
      ],
      "SafeCast": [
        8392
      ],
      "SimpleTreasury": [
        10759
      ],
      "Slicer": [
        11192
      ],
      "Sorter": [
        11365
      ],
      "Strings": [
        4868
      ],
      "Timers": [
        5082
      ],
      "Votes": [
        2238
      ]
    },
    "id": 10205,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10164,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "123:23:36"
      },
      {
        "absolutePath": "project:/contracts/GovernanceExtensions/GovernorContest.sol",
        "file": "./GovernorContest.sol",
        "id": 10165,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10205,
        "sourceUnit": 10163,
        "src": "148:31:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/governance/utils/IVotes.sol",
        "file": "@openzeppelin/contracts/governance/utils/IVotes.sol",
        "id": 10166,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10205,
        "sourceUnit": 1785,
        "src": "180:61:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 10168,
              "name": "GovernorContest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10162,
              "src": "443:15:36"
            },
            "id": 10169,
            "nodeType": "InheritanceSpecifier",
            "src": "443:15:36"
          }
        ],
        "canonicalName": "GovernorVotes",
        "contractDependencies": [
          10759
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 10167,
          "nodeType": "StructuredDocumentation",
          "src": "243:164:36",
          "text": " @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n _Available since v4.3._"
        },
        "fullyImplemented": false,
        "id": 10204,
        "linearizedBaseContracts": [
          10204,
          10162,
          10967,
          5643,
          5667,
          6023,
          4568
        ],
        "name": "GovernorVotes",
        "nameLocation": "426:13:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 10172,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "489:5:36",
            "nodeType": "VariableDeclaration",
            "scope": 10204,
            "src": "465:29:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVotes_$1784",
              "typeString": "contract IVotes"
            },
            "typeName": {
              "id": 10171,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10170,
                "name": "IVotes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1784,
                "src": "465:6:36"
              },
              "referencedDeclaration": 1784,
              "src": "465:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVotes_$1784",
                "typeString": "contract IVotes"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10182,
              "nodeType": "Block",
              "src": "534:37:36",
              "statements": [
                {
                  "expression": {
                    "id": 10180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10178,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10172,
                      "src": "544:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotes_$1784",
                        "typeString": "contract IVotes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10179,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10175,
                      "src": "552:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotes_$1784",
                        "typeString": "contract IVotes"
                      }
                    },
                    "src": "544:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotes_$1784",
                      "typeString": "contract IVotes"
                    }
                  },
                  "id": 10181,
                  "nodeType": "ExpressionStatement",
                  "src": "544:20:36"
                }
              ]
            },
            "id": 10183,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10175,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "520:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 10183,
                  "src": "513:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotes_$1784",
                    "typeString": "contract IVotes"
                  },
                  "typeName": {
                    "id": 10174,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10173,
                      "name": "IVotes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1784,
                      "src": "513:6:36"
                    },
                    "referencedDeclaration": 1784,
                    "src": "513:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotes_$1784",
                      "typeString": "contract IVotes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "512:21:36"
            },
            "returnParameters": {
              "id": 10177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:0:36"
            },
            "scope": 10204,
            "src": "501:70:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              9557
            ],
            "body": {
              "id": 10202,
              "nodeType": "Block",
              "src": "857:64:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10198,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10186,
                        "src": "893:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10199,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10188,
                        "src": "902:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10196,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10172,
                        "src": "874:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotes_$1784",
                          "typeString": "contract IVotes"
                        }
                      },
                      "id": 10197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPastVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1745,
                      "src": "874:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 10200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:40:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10195,
                  "id": 10201,
                  "nodeType": "Return",
                  "src": "867:47:36"
                }
              ]
            },
            "documentation": {
              "id": 10184,
              "nodeType": "StructuredDocumentation",
              "src": "577:114:36",
              "text": " Read the voting weight from the token's built in snapshot mechanism (see {Governor-_getVotes})."
            },
            "id": 10203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getVotes",
            "nameLocation": "705:9:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10192,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "830:8:36"
            },
            "parameters": {
              "id": 10191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10186,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "732:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "724:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10188,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "757:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "749:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "778:12:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "714:93:36"
            },
            "returnParameters": {
              "id": 10195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10203,
                  "src": "848:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:9:36"
            },
            "scope": 10204,
            "src": "696:225:36",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 10205,
        "src": "408:515:36",
        "usedErrors": []
      }
    ],
    "src": "123:801:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-08-15T10:35:57.428Z",
  "devdoc": {
    "details": "Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token. _Available since v4.3._",
    "kind": "dev",
    "methods": {
      "castVote(address)": {
        "details": "See {IGovernor-castVote}."
      },
      "contestDeadline(uint256)": {
        "details": "See {IGovernor-proposalDeadline}."
      },
      "contestRegistration(uint256)": {
        "details": "See {IGovernorContest-contestRegistration}."
      },
      "contestVoting(uint256)": {
        "details": "See {IGovernor-proposalSnapshot}."
      },
      "execute()": {
        "details": "See {IGovernor-execute}."
      },
      "getVotes(address,uint256)": {
        "details": "See {IGovernor-getVotes}."
      },
      "hasVoted(uint256,address)": {
        "details": "See {IGovernor-hasVoted}."
      },
      "idOfOpenContests()": {
        "details": "Id of the open contest "
      },
      "initiateContest()": {
        "details": "See {IGovernor-propose}."
      },
      "name()": {
        "details": "See {IGovernor-name}."
      },
      "proposalThreshold()": {
        "details": "Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_."
      },
      "quorum(uint256)": {
        "details": "Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes})."
      },
      "register(string)": {
        "details": "Allows participants to register to the contest.  Note : Maybe add an event?"
      },
      "registeringDelay()": {
        "details": "Delay, in number of block, between the contest is created and the registration starts. This can be increased for various reasons such as : leave time for users to buy voting power, or delegate it, or communicate interests about the reward pool around before the voting of a proposal starts."
      },
      "registrationPeriod()": {
        "details": "Time, in number of blocks, for the participants to register with their desired file."
      },
      "state(uint256)": {
        "details": "See {IGovernorContest-state}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "version()": {
        "details": "See {IGovernor-version}."
      },
      "votingPeriod()": {
        "details": "Delay, in number of blocks, between the vote start and vote ends. NOTE: The {registeringDelay and registeringPeriod} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "currentParticipants()": {
        "notice": "see library documentation - {ArraySlicer} "
      },
      "idOfOpenContests()": {
        "notice": "module:contestCore-LorenzSchmidlin"
      },
      "quorum(uint256)": {
        "notice": "module:user-config"
      },
      "register(string)": {
        "notice": "module:contestCore-LorenzSchmidlin"
      },
      "registeringDelay()": {
        "notice": "module:contest-config"
      },
      "registrationPeriod()": {
        "notice": "module:contest-config"
      },
      "votingPeriod()": {
        "notice": "module:user-config"
      }
    },
    "version": 1
  }
}