{
  "contractName": "SimpleTreasury",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC721Version",
          "name": "_mainCollection",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "EthTransferReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "EtherWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasuryOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TreasuryInstantiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMainToken",
      "outputs": [
        {
          "internalType": "contract IERC721Version",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC721Version\",\"name\":\"_mainCollection\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"EthTransferReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"EtherWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasuryOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TreasuryInstantiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMainToken\",\"outputs\":[{\"internalType\":\"contract IERC721Version\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SimpleTreasury.sol\":\"SimpleTreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0db2a6141fa677ae237b5f954d7af76553aa436855d32abca3110d92e9b56ec4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7af446b3a4212749257751ba805faec614b481eea69a2a49c931c9b38a6c7e1c\",\"dweb:/ipfs/QmchQ5ruA6pvh9aGKeQuez9PmuZ7FGQigivYTCSgx7CHj6\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xe1d0cd92e6827b0ca89925a59ec0eadc2b444aa3dd430fecb752a93c36436991\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf6b448bf512c72350a4aaeeb0053e7f112c278cd9bdd7eb04c2f7b40b24f4dc\",\"dweb:/ipfs/Qmd1o6mVH7xLRg6yQ7Hza51bjARb2UA38LXsbTNRG9tvRu\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x089922faffaa6662249c3fbea3bec2dc1d78a145253a4dbf9e91b7df6a434cf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1b83cc2a7127ce6a4ca5c8ffa74013701ebe66d7232717a5acb6572e143d738\",\"dweb:/ipfs/QmWpyQwnkLkz5r4jS69R8Ax5jP6Yp7eNCLjb6gZbfhg3Tm\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol\":{\"keccak256\":\"0x7cdc887a364b6e3f9669bb4b16582e135121437399ac69d41db15012e09b96cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1c4fcd6eafe8f6b8daf541a2cccfcd44368aa0a697c567a5b875edc8c43fea\",\"dweb:/ipfs/QmcN4HhvYveWTtcGfUY3vnzSbJyAtmgvprUW58rDLY7Vdf\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x9bc4d7eb03c4e87fd5122e03cdff5f60fa360d76925980ad022b2c6fac9876f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c6d7cfaac6b54599068126b75474c86ccbbaf386c3581abf82d9cda21b35c81\",\"dweb:/ipfs/QmPZteoCvkiUgv4TZxv2wiEKR5KqM83UCohHnSGw1RytpM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x2e109f03a05809288a1478d4d9fcd0804229207e18d1164ce0597fb0958a159c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9495415607fcbd1c940e726f396c46892af8c8772247c002650deacaf5199fb\",\"dweb:/ipfs/QmagLfEk1NCaJEMVDP3ix9BmXy6mccVUMfKAbWQFtjkjvJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]},\"project:/contracts/ERC721Version.sol\":{\"keccak256\":\"0x75c031699509e9796c73efda0e940391ff1ae81c5b18a2427fe7b62779bab60f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79848548ab93808d4683a5b7a39befd64fcb4125ec77e0f370c8f660b50f1864\",\"dweb:/ipfs/QmPBVyN8cyVmSgUfzVN3UGbEDKJciwDjpn6VMokjZgqWmg\"]},\"project:/contracts/SimpleTreasury.sol\":{\"keccak256\":\"0x62b0c3fe9c9acbc2d5c88d9c692855f7dfff0d68ca41650c510996f90ba72491\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d122528aa8835871d60083da8d18766d198b7292b7152594ad36de56adbbdbb\",\"dweb:/ipfs/QmZAe8DbpJcAjBhXKhyU2MVVH4E7BEmmk1wDfZCy4mWNCh\"]},\"project:/contracts/interfaces/IERC721Version.sol\":{\"keccak256\":\"0x1c7242bc08bd659ff5ee17b7ff779d7450fa0c56e601962844f97564ce381d98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7ad4826f6a6fe62678a1e0977b096e286aef5fd5bafdd0057c217f708c2071b\",\"dweb:/ipfs/QmWyZU44X9bhh2pjhEv7xAkYXez37m55tuBbZRA2b38Bgt\"]},\"project:/contracts/interfaces/ISimpleTreasury.sol\":{\"keccak256\":\"0x870ac8509ddfac73e7afb424d0a331183d9bb296e75e16b98d9735e0edf29248\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e30cde919871844928850744dc2a8a2f1a1c1d6c9cbf2965de1674ad94d840e\",\"dweb:/ipfs/QmVxThHkDC5CmEhE8sU22Lo8aJRFEBQgedLTJGrYZxVPrJ\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516105bf3803806105bf83398101604081905261002f916100dc565b6100383361008c565b6001600160a01b03811660808190526040805133815230602082015280820192909252517f0371e6c1451d0a54cd2b7d5cf31ff881fd3e2437d82386d1529501336060f5f29181900360600190a15061010c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ee57600080fd5b81516001600160a01b038116811461010557600080fd5b9392505050565b608051610499610126600039600060e301526104996000f3fe6080604052600436106100595760003560e01c806312065fe0146100b15780634de046d5146100d457806364a197f31461011b578063715018a61461013d5780638da5cb5b14610152578063f2fde38b1461017057600080fd5b366100ac57346001600082825461007091906103cf565b909155505060405134815233907f7633918dd12eec332d7212b2ddc5cfd92b19ba6b4bca27ecc63534c3bf137b659060200160405180910390a2005b600080fd5b3480156100bd57600080fd5b506001546040519081526020015b60405180910390f35b3480156100e057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100cb565b34801561012757600080fd5b5061013b6101363660046103fc565b610190565b005b34801561014957600080fd5b5061013b6101a6565b34801561015e57600080fd5b506000546001600160a01b0316610103565b34801561017c57600080fd5b5061013b61018b366004610428565b6101ba565b610198610238565b6101a28282610292565b5050565b6101ae610238565b6101b86000610369565b565b6101c2610238565b6001600160a01b03811661022c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61023581610369565b50565b6000546001600160a01b031633146101b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610223565b6001548111156102d95760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610223565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561030f573d6000803e3d6000fd5b508060016000828254610322919061044c565b90915550506040518181526001600160a01b038316907fc70a094cb0b20f152b6d171a215827df475885ee85e81c9626d07200d7ddea429060200160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600082198211156103e2576103e26103b9565b500190565b6001600160a01b038116811461023557600080fd5b6000806040838503121561040f57600080fd5b823561041a816103e7565b946020939093013593505050565b60006020828403121561043a57600080fd5b8135610445816103e7565b9392505050565b60008282101561045e5761045e6103b9565b50039056fea264697066735822122040ccbc6b429c57334221bb5413659af583b271e2e60cbb12ff4e0d68006a75f364736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c806312065fe0146100b15780634de046d5146100d457806364a197f31461011b578063715018a61461013d5780638da5cb5b14610152578063f2fde38b1461017057600080fd5b366100ac57346001600082825461007091906103cf565b909155505060405134815233907f7633918dd12eec332d7212b2ddc5cfd92b19ba6b4bca27ecc63534c3bf137b659060200160405180910390a2005b600080fd5b3480156100bd57600080fd5b506001546040519081526020015b60405180910390f35b3480156100e057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100cb565b34801561012757600080fd5b5061013b6101363660046103fc565b610190565b005b34801561014957600080fd5b5061013b6101a6565b34801561015e57600080fd5b506000546001600160a01b0316610103565b34801561017c57600080fd5b5061013b61018b366004610428565b6101ba565b610198610238565b6101a28282610292565b5050565b6101ae610238565b6101b86000610369565b565b6101c2610238565b6001600160a01b03811661022c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61023581610369565b50565b6000546001600160a01b031633146101b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610223565b6001548111156102d95760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610223565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561030f573d6000803e3d6000fd5b508060016000828254610322919061044c565b90915550506040518181526001600160a01b038316907fc70a094cb0b20f152b6d171a215827df475885ee85e81c9626d07200d7ddea429060200160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600082198211156103e2576103e26103b9565b500190565b6001600160a01b038116811461023557600080fd5b6000806040838503121561040f57600080fd5b823561041a816103e7565b946020939093013593505050565b60006020828403121561043a57600080fd5b8135610445816103e7565b9392505050565b60008282101561045e5761045e6103b9565b50039056fea264697066735822122040ccbc6b429c57334221bb5413659af583b271e2e60cbb12ff4e0d68006a75f364736f6c634300080b0033",
  "immutableReferences": {
    "10656": [
      {
        "length": 32,
        "start": 227
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:719:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "119:209:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "140:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "149:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "136:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "136:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "161:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "132:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "132:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "129:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "190:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "209:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "203:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "194:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "282:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "294:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "284:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "284:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "284:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "241:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "252:5:54"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "267:3:54",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "272:1:54",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "263:3:54"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "263:11:54"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "276:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "259:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "259:19:54"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "248:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "248:31:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "238:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "238:42:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:50:54"
                  },
                  "nodeType": "YulIf",
                  "src": "228:70:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "307:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "317:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "307:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC721Version_$10785_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "85:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "96:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "108:6:54",
                "type": ""
              }
            ],
            "src": "14:314:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "490:227:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "500:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "512:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "523:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "508:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "508:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "500:4:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "535:29:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "553:3:54",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "558:1:54",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:11:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "562:1:54",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "545:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "545:19:54"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "539:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "580:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "595:6:54"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "603:2:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "591:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "591:15:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "573:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "573:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "573:34:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "627:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "638:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "623:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "623:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "647:6:54"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "655:2:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "643:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "643:15:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "616:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:43:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "616:43:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "679:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "690:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "675:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "675:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "699:6:54"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "707:2:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "695:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "695:15:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "668:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:43:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "668:43:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "443:9:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "454:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "462:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "470:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "481:4:54",
                "type": ""
              }
            ],
            "src": "333:384:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC721Version_$10785_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2883:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:54",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:54",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:54",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:54",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:54",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:54"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "194:80:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "221:22:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "223:16:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "223:18:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "223:18:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "210:1:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "217:1:54"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "213:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "213:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "207:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:13:54"
                  },
                  "nodeType": "YulIf",
                  "src": "204:39:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:16:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "263:1:54"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "266:1:54"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "259:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "259:9:54"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "252:3:54"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "177:1:54",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "180:1:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "186:3:54",
                "type": ""
              }
            ],
            "src": "146:128:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "380:76:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "390:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "402:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "413:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "398:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "398:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "390:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "432:9:54"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "443:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "425:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "425:25:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "425:25:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "349:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "360:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "371:4:54",
                "type": ""
              }
            ],
            "src": "279:177:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "586:102:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "596:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "608:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "619:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "604:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "604:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "596:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "638:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "653:6:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "669:3:54",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "674:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "665:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "665:11:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "678:1:54",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "661:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "661:19:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "649:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "649:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "631:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "631:51:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "631:51:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC721Version_$10785__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "555:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "566:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "577:4:54",
                "type": ""
              }
            ],
            "src": "461:227:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "746:86:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "810:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "819:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "822:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "812:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "812:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "812:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "769:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "780:5:54"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "795:3:54",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "800:1:54",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "791:3:54"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "791:11:54"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "804:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "787:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "787:19:54"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "776:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "776:31:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "766:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "766:42:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "759:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "759:50:54"
                  },
                  "nodeType": "YulIf",
                  "src": "756:70:54"
                }
              ]
            },
            "name": "validator_revert_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "735:5:54",
                "type": ""
              }
            ],
            "src": "693:139:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "932:236:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "978:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "987:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "990:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "980:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "980:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "980:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "953:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "962:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "949:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "974:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "945:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "945:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "942:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1003:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1029:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1016:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1007:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1081:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1048:32:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1048:39:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1048:39:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1096:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1106:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1096:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1120:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1147:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1158:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1143:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1143:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1130:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1120:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "890:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "901:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "913:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "921:6:54",
                "type": ""
              }
            ],
            "src": "837:331:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1274:102:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1284:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1296:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1307:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1292:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1292:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1284:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1326:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1341:6:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1357:3:54",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1362:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1353:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1353:11:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1366:1:54",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1349:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1349:19:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1337:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1337:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1319:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1319:51:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1319:51:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1243:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1254:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1265:4:54",
                "type": ""
              }
            ],
            "src": "1173:203:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1451:185:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1497:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1506:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1509:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1499:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1499:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1499:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1472:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1481:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1468:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1468:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1493:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1464:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1464:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1461:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1522:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1548:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1535:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1535:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1526:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1600:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1567:32:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1567:39:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1567:39:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1615:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1625:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1615:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1417:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1428:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1440:6:54",
                "type": ""
              }
            ],
            "src": "1381:255:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1815:228:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1832:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1843:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1825:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1825:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1825:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1866:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1877:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1862:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1862:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1882:2:54",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1855:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1855:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1905:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1916:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1901:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1901:18:54"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1921:34:54",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1894:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:62:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1894:62:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1976:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1987:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1972:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1972:18:54"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1992:8:54",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1965:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1965:36:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1965:36:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2010:27:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2022:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2033:3:54",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2018:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2018:19:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2010:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1792:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1806:4:54",
                "type": ""
              }
            ],
            "src": "1641:402:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2222:182:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2239:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2250:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2232:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2232:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2232:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2273:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2284:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2269:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2269:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2289:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2262:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2262:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2312:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2323:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2308:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2308:18:54"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2328:34:54",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2301:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2301:62:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2301:62:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2372:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2384:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2395:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2380:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2380:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2372:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2199:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2213:4:54",
                "type": ""
              }
            ],
            "src": "2048:356:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2583:168:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2600:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2611:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2593:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2593:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2593:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2634:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2645:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2630:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2630:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2650:2:54",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2623:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2623:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2623:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2673:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2684:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2669:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2669:18:54"
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2689:20:54",
                        "type": "",
                        "value": "Insufficient funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2662:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2662:48:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2662:48:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2719:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2731:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2742:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2727:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2727:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2719:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2560:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2574:4:54",
                "type": ""
              }
            ],
            "src": "2409:342:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2805:76:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2827:22:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2829:16:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2829:18:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2829:18:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2821:1:54"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2824:1:54"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2818:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2818:8:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2815:34:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2858:17:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2870:1:54"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2873:1:54"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2866:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2866:9:54"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2858:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2787:1:54",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2790:1:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2796:4:54",
                "type": ""
              }
            ],
            "src": "2756:125:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC721Version_$10785__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Insufficient funds\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "313:1158:48:-:0;;;551:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:18;936:18:0;:32::i;:::-;-1:-1:-1;;;;;606:37:48;;;;;;702:76;;;723:10;573:34:54;;743:4:48;638:2:54;623:18;;616:43;675:18;;;668:43;;;;702:76:48;;;;;;523:2:54;702:76:48;;;551:239;313:1158;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:314:54:-;108:6;161:2;149:9;140:7;136:23;132:32;129:52;;;177:1;174;167:12;129:52;203:16;;-1:-1:-1;;;;;248:31:54;;238:42;;228:70;;294:1;291;284:12;228:70;317:5;14:314;-1:-1:-1;;;14:314:54:o;333:384::-;313:1158:48;;;;;;;;;;;;",
  "deployedSourceMap": "313:1158:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;849:9;838:7;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;873:42:48;;905:9;425:25:54;;893:10:48;;873:42;;413:2:54;398:18;873:42:48;;;;;;;313:1158;;;;;928:71;;;;;;;;;;-1:-1:-1;990:7:48;;928:71;;425:25:54;;;413:2;398:18;928:71:48;;;;;;;;1005:91;;;;;;;;;;-1:-1:-1;1076:18:48;1005:91;;;-1:-1:-1;;;;;649:32:54;;;631:51;;619:2;604:18;1005:91:48;461:227:54;1103:114:48;;;;;;;;;;-1:-1:-1;1103:114:48;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;2081:198;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;1103:114:48:-;1094:13:0;:11;:13::i;:::-;1185:25:48::1;1195:5;1202:7;1185:9;:25::i;:::-;1103:114:::0;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;1843:2:54;2161:73:0::1;::::0;::::1;1825:21:54::0;1882:2;1862:18;;;1855:30;1921:34;1901:18;;;1894:62;-1:-1:-1;;;1972:18:54;;;1965:36;2018:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2250:2:54;1414:68:0;;;2232:21:54;;;2269:18;;;2262:30;2328:34;2308:18;;;2301:62;2380:18;;1414:68:0;2048:356:54;1223:245:48;1321:7;;1310:6;:18;;1302:49;;;;-1:-1:-1;;;1302:49:48;;2611:2:54;1302:49:48;;;2593:21:54;2650:2;2630:18;;;2623:30;-1:-1:-1;;;2669:18:54;;;2662:48;2727:18;;1302:49:48;2409:342:54;1302:49:48;1361:25;;-1:-1:-1;;;;;1361:17:48;;;:25;;;;;1379:6;;1361:25;;;;1379:6;1361:17;:25;;;;;;;;;;;;;;;;;;;;;1407:6;1396:7;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;1428:33:48;;425:25:54;;;-1:-1:-1;;;;;1428:33:48;;;;;413:2:54;398:18;1428:33:48;;;;;;;1223:245;;:::o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:127:54:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:128;186:3;217:1;213:6;210:1;207:13;204:39;;;223:18;;:::i;:::-;-1:-1:-1;259:9:54;;146:128::o;693:139::-;-1:-1:-1;;;;;776:31:54;;766:42;;756:70;;822:1;819;812:12;837:331;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1029:9;1016:23;1048:39;1081:5;1048:39;:::i;:::-;1106:5;1158:2;1143:18;;;;1130:32;;-1:-1:-1;;;837:331:54:o;1381:255::-;1440:6;1493:2;1481:9;1472:7;1468:23;1464:32;1461:52;;;1509:1;1506;1499:12;1461:52;1548:9;1535:23;1567:39;1600:5;1567:39;:::i;:::-;1625:5;1381:255;-1:-1:-1;;;1381:255:54:o;2756:125::-;2796:4;2824:1;2821;2818:8;2815:34;;;2829:18;;:::i;:::-;-1:-1:-1;2866:9:54;;2756:125::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\nimport \"./ERC721Version.sol\";\nimport \"./interfaces/ISimpleTreasury.sol\";\n\n\ncontract SimpleTreasury is ISimpleTreasury, Ownable {\n\n    // The amount of Ether within the treasury.\n    uint256 balance;\n    // The token representing the NFT collection.\n    IERC721Version private immutable mainTokenOfProject;\n\n\n\n    constructor (IERC721Version _mainCollection) {\n        mainTokenOfProject =  _mainCollection;\n        // from ownable owner = msg.sender;\n        emit TreasuryInstantiated(msg.sender, address(this), address(mainTokenOfProject));     \n    }\n    \n \n    receive() payable external{\n        balance += msg.value;\n        emit EthTransferReceived(msg.sender, msg.value);\n    }\n\n    function getBalance() external view returns (uint256) {return balance;}\n\n    function getMainToken() external view returns (IERC721Version) {return mainTokenOfProject;}\n\n\n    function sendETH(address payable _addr, uint256 _amount) public onlyOwner {\n      _withdraw(_addr, _amount);\n    }\n\n    function _withdraw( address payable destAddr, uint256 amount) private{\n        require(amount <=  balance, \"Insufficient funds\");\n        destAddr.transfer(amount);\n        balance -= amount;\n        emit EtherWithdrawal(destAddr, amount);\n    }\n\n}",
  "sourcePath": "/Users/admin/Desktop/GeneralCoding/TokenSmith/contracts/SimpleTreasury.sol",
  "ast": {
    "absolutePath": "project:/contracts/SimpleTreasury.sol",
    "exportedSymbols": {
      "Address": [
        4312
      ],
      "Checkpoints": [
        4546
      ],
      "Context": [
        4568
      ],
      "Counters": [
        4642
      ],
      "DoubleEndedQueue": [
        8733
      ],
      "ECDSA": [
        5489
      ],
      "EIP712": [
        5643
      ],
      "ERC165": [
        5667
      ],
      "ERC2981": [
        4017
      ],
      "ERC721": [
        3243
      ],
      "ERC721Enumerable": [
        3715
      ],
      "ERC721Royalty": [
        3761
      ],
      "ERC721Version": [
        9100
      ],
      "Governor": [
        1409
      ],
      "IERC1155Receiver": [
        2298
      ],
      "IERC165": [
        6023
      ],
      "IERC20": [
        2376
      ],
      "IERC2981": [
        2257
      ],
      "IERC721": [
        3359
      ],
      "IERC721Enumerable": [
        3792
      ],
      "IERC721Metadata": [
        3819
      ],
      "IERC721Receiver": [
        3377
      ],
      "IERC721Version": [
        10785
      ],
      "IGovernor": [
        1706
      ],
      "ISimpleTreasury": [
        10997
      ],
      "IVotes": [
        1784
      ],
      "Math": [
        6541
      ],
      "Ownable": [
        112
      ],
      "SafeCast": [
        8392
      ],
      "SimpleTreasury": [
        10759
      ],
      "Strings": [
        4868
      ],
      "Timers": [
        5082
      ],
      "Votes": [
        2238
      ]
    },
    "id": 10760,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10642,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:48"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 10643,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 3360,
        "src": "67:58:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 10644,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 2377,
        "src": "126:56:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10645,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 113,
        "src": "183:52:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Version.sol",
        "file": "./ERC721Version.sol",
        "id": 10646,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 9101,
        "src": "238:29:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ISimpleTreasury.sol",
        "file": "./interfaces/ISimpleTreasury.sol",
        "id": 10647,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 10998,
        "src": "268:42:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10648,
              "name": "ISimpleTreasury",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10997,
              "src": "340:15:48"
            },
            "id": 10649,
            "nodeType": "InheritanceSpecifier",
            "src": "340:15:48"
          },
          {
            "baseName": {
              "id": 10650,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "357:7:48"
            },
            "id": 10651,
            "nodeType": "InheritanceSpecifier",
            "src": "357:7:48"
          }
        ],
        "canonicalName": "SimpleTreasury",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10759,
        "linearizedBaseContracts": [
          10759,
          112,
          4568,
          10997
        ],
        "name": "SimpleTreasury",
        "nameLocation": "322:14:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10653,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "428:7:48",
            "nodeType": "VariableDeclaration",
            "scope": 10759,
            "src": "420:15:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10652,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10656,
            "mutability": "immutable",
            "name": "mainTokenOfProject",
            "nameLocation": "524:18:48",
            "nodeType": "VariableDeclaration",
            "scope": 10759,
            "src": "491:51:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721Version_$10785",
              "typeString": "contract IERC721Version"
            },
            "typeName": {
              "id": 10655,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10654,
                "name": "IERC721Version",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10785,
                "src": "491:14:48"
              },
              "referencedDeclaration": 10785,
              "src": "491:14:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Version_$10785",
                "typeString": "contract IERC721Version"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 10679,
              "nodeType": "Block",
              "src": "596:194:48",
              "statements": [
                {
                  "expression": {
                    "id": 10664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10662,
                      "name": "mainTokenOfProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10656,
                      "src": "606:18:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Version_$10785",
                        "typeString": "contract IERC721Version"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10663,
                      "name": "_mainCollection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10659,
                      "src": "628:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Version_$10785",
                        "typeString": "contract IERC721Version"
                      }
                    },
                    "src": "606:37:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Version_$10785",
                      "typeString": "contract IERC721Version"
                    }
                  },
                  "id": 10665,
                  "nodeType": "ExpressionStatement",
                  "src": "606:37:48"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10667,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "723:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "723:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10671,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "743:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleTreasury_$10759",
                              "typeString": "contract SimpleTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleTreasury_$10759",
                              "typeString": "contract SimpleTreasury"
                            }
                          ],
                          "id": 10670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "735:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10669,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "735:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "735:13:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10675,
                            "name": "mainTokenOfProject",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10656,
                            "src": "758:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721Version_$10785",
                              "typeString": "contract IERC721Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC721Version_$10785",
                              "typeString": "contract IERC721Version"
                            }
                          ],
                          "id": 10674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "750:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10673,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "750:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "750:27:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10666,
                      "name": "TreasuryInstantiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10984,
                      "src": "702:20:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "702:76:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10678,
                  "nodeType": "EmitStatement",
                  "src": "697:81:48"
                }
              ]
            },
            "id": 10680,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10659,
                  "mutability": "mutable",
                  "name": "_mainCollection",
                  "nameLocation": "579:15:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10680,
                  "src": "564:30:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721Version_$10785",
                    "typeString": "contract IERC721Version"
                  },
                  "typeName": {
                    "id": 10658,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10657,
                      "name": "IERC721Version",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10785,
                      "src": "564:14:48"
                    },
                    "referencedDeclaration": 10785,
                    "src": "564:14:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Version_$10785",
                      "typeString": "contract IERC721Version"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "563:32:48"
            },
            "returnParameters": {
              "id": 10661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:0:48"
            },
            "scope": 10759,
            "src": "551:239:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10695,
              "nodeType": "Block",
              "src": "828:94:48",
              "statements": [
                {
                  "expression": {
                    "id": 10686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10683,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10653,
                      "src": "838:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10684,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "849:3:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "849:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "838:20:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10687,
                  "nodeType": "ExpressionStatement",
                  "src": "838:20:48"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "893:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "893:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10691,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "905:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "905:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10688,
                      "name": "EthTransferReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10990,
                      "src": "873:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:42:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10694,
                  "nodeType": "EmitStatement",
                  "src": "868:47:48"
                }
              ]
            },
            "id": 10696,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:2:48"
            },
            "returnParameters": {
              "id": 10682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "828:0:48"
            },
            "scope": 10759,
            "src": "802:120:48",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10703,
              "nodeType": "Block",
              "src": "982:17:48",
              "statements": [
                {
                  "expression": {
                    "id": 10701,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10653,
                    "src": "990:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10700,
                  "id": 10702,
                  "nodeType": "Return",
                  "src": "983:14:48"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 10704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "937:10:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:2:48"
            },
            "returnParameters": {
              "id": 10700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10699,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10704,
                  "src": "973:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "972:9:48"
            },
            "scope": 10759,
            "src": "928:71:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10976
            ],
            "body": {
              "id": 10712,
              "nodeType": "Block",
              "src": "1068:28:48",
              "statements": [
                {
                  "expression": {
                    "id": 10710,
                    "name": "mainTokenOfProject",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10656,
                    "src": "1076:18:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Version_$10785",
                      "typeString": "contract IERC721Version"
                    }
                  },
                  "functionReturnParameters": 10709,
                  "id": 10711,
                  "nodeType": "Return",
                  "src": "1069:25:48"
                }
              ]
            },
            "functionSelector": "4de046d5",
            "id": 10713,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMainToken",
            "nameLocation": "1014:12:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1026:2:48"
            },
            "returnParameters": {
              "id": 10709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10708,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10713,
                  "src": "1052:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721Version_$10785",
                    "typeString": "contract IERC721Version"
                  },
                  "typeName": {
                    "id": 10707,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10706,
                      "name": "IERC721Version",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10785,
                      "src": "1052:14:48"
                    },
                    "referencedDeclaration": 10785,
                    "src": "1052:14:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Version_$10785",
                      "typeString": "contract IERC721Version"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1051:16:48"
            },
            "scope": 10759,
            "src": "1005:91:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10727,
              "nodeType": "Block",
              "src": "1177:40:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10723,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10715,
                        "src": "1195:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 10724,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10717,
                        "src": "1202:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10722,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10758,
                      "src": "1185:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 10725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:25:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10726,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:25:48"
                }
              ]
            },
            "functionSelector": "64a197f3",
            "id": 10728,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10720,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10719,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1167:9:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "1167:9:48"
              }
            ],
            "name": "sendETH",
            "nameLocation": "1112:7:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10715,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1136:5:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10728,
                  "src": "1120:21:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:15:48",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10717,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1151:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10728,
                  "src": "1143:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1119:40:48"
            },
            "returnParameters": {
              "id": 10721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:48"
            },
            "scope": 10759,
            "src": "1103:114:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10757,
              "nodeType": "Block",
              "src": "1292:176:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10736,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10732,
                          "src": "1310:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 10737,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10653,
                          "src": "1321:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1310:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 10739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1330:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 10735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1302:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:49:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10741,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:49:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10745,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10732,
                        "src": "1379:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10742,
                        "name": "destAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10730,
                        "src": "1361:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 10744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1361:17:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:25:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10747,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:25:48"
                },
                {
                  "expression": {
                    "id": 10750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10748,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10653,
                      "src": "1396:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 10749,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10732,
                      "src": "1407:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1396:17:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10751,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:17:48"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10753,
                        "name": "destAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10730,
                        "src": "1444:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 10754,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10732,
                        "src": "1454:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10752,
                      "name": "EtherWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10996,
                      "src": "1428:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:33:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10756,
                  "nodeType": "EmitStatement",
                  "src": "1423:38:48"
                }
              ]
            },
            "id": 10758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "1232:9:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10730,
                  "mutability": "mutable",
                  "name": "destAddr",
                  "nameLocation": "1259:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10758,
                  "src": "1243:24:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:15:48",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10732,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1277:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10758,
                  "src": "1269:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:43:48"
            },
            "returnParameters": {
              "id": 10734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1292:0:48"
            },
            "scope": 10759,
            "src": "1223:245:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 10760,
        "src": "313:1158:48",
        "usedErrors": []
      }
    ],
    "src": "32:1439:48"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/SimpleTreasury.sol",
    "exportedSymbols": {
      "Address": [
        4312
      ],
      "Checkpoints": [
        4546
      ],
      "Context": [
        4568
      ],
      "Counters": [
        4642
      ],
      "DoubleEndedQueue": [
        8733
      ],
      "ECDSA": [
        5489
      ],
      "EIP712": [
        5643
      ],
      "ERC165": [
        5667
      ],
      "ERC2981": [
        4017
      ],
      "ERC721": [
        3243
      ],
      "ERC721Enumerable": [
        3715
      ],
      "ERC721Royalty": [
        3761
      ],
      "ERC721Version": [
        9100
      ],
      "Governor": [
        1409
      ],
      "IERC1155Receiver": [
        2298
      ],
      "IERC165": [
        6023
      ],
      "IERC20": [
        2376
      ],
      "IERC2981": [
        2257
      ],
      "IERC721": [
        3359
      ],
      "IERC721Enumerable": [
        3792
      ],
      "IERC721Metadata": [
        3819
      ],
      "IERC721Receiver": [
        3377
      ],
      "IERC721Version": [
        10785
      ],
      "IGovernor": [
        1706
      ],
      "ISimpleTreasury": [
        10997
      ],
      "IVotes": [
        1784
      ],
      "Math": [
        6541
      ],
      "Ownable": [
        112
      ],
      "SafeCast": [
        8392
      ],
      "SimpleTreasury": [
        10759
      ],
      "Strings": [
        4868
      ],
      "Timers": [
        5082
      ],
      "Votes": [
        2238
      ]
    },
    "id": 10760,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10642,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:48"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 10643,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 3360,
        "src": "67:58:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 10644,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 2377,
        "src": "126:56:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10645,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 113,
        "src": "183:52:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Version.sol",
        "file": "./ERC721Version.sol",
        "id": 10646,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 9101,
        "src": "238:29:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ISimpleTreasury.sol",
        "file": "./interfaces/ISimpleTreasury.sol",
        "id": 10647,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10760,
        "sourceUnit": 10998,
        "src": "268:42:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10648,
              "name": "ISimpleTreasury",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10997,
              "src": "340:15:48"
            },
            "id": 10649,
            "nodeType": "InheritanceSpecifier",
            "src": "340:15:48"
          },
          {
            "baseName": {
              "id": 10650,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "357:7:48"
            },
            "id": 10651,
            "nodeType": "InheritanceSpecifier",
            "src": "357:7:48"
          }
        ],
        "canonicalName": "SimpleTreasury",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10759,
        "linearizedBaseContracts": [
          10759,
          112,
          4568,
          10997
        ],
        "name": "SimpleTreasury",
        "nameLocation": "322:14:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10653,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "428:7:48",
            "nodeType": "VariableDeclaration",
            "scope": 10759,
            "src": "420:15:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10652,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10656,
            "mutability": "immutable",
            "name": "mainTokenOfProject",
            "nameLocation": "524:18:48",
            "nodeType": "VariableDeclaration",
            "scope": 10759,
            "src": "491:51:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721Version_$10785",
              "typeString": "contract IERC721Version"
            },
            "typeName": {
              "id": 10655,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10654,
                "name": "IERC721Version",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10785,
                "src": "491:14:48"
              },
              "referencedDeclaration": 10785,
              "src": "491:14:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Version_$10785",
                "typeString": "contract IERC721Version"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 10679,
              "nodeType": "Block",
              "src": "596:194:48",
              "statements": [
                {
                  "expression": {
                    "id": 10664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10662,
                      "name": "mainTokenOfProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10656,
                      "src": "606:18:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Version_$10785",
                        "typeString": "contract IERC721Version"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10663,
                      "name": "_mainCollection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10659,
                      "src": "628:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Version_$10785",
                        "typeString": "contract IERC721Version"
                      }
                    },
                    "src": "606:37:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Version_$10785",
                      "typeString": "contract IERC721Version"
                    }
                  },
                  "id": 10665,
                  "nodeType": "ExpressionStatement",
                  "src": "606:37:48"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10667,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "723:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "723:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10671,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "743:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleTreasury_$10759",
                              "typeString": "contract SimpleTreasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleTreasury_$10759",
                              "typeString": "contract SimpleTreasury"
                            }
                          ],
                          "id": 10670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "735:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10669,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "735:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "735:13:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10675,
                            "name": "mainTokenOfProject",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10656,
                            "src": "758:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721Version_$10785",
                              "typeString": "contract IERC721Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC721Version_$10785",
                              "typeString": "contract IERC721Version"
                            }
                          ],
                          "id": 10674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "750:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10673,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "750:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "750:27:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10666,
                      "name": "TreasuryInstantiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10984,
                      "src": "702:20:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "702:76:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10678,
                  "nodeType": "EmitStatement",
                  "src": "697:81:48"
                }
              ]
            },
            "id": 10680,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10659,
                  "mutability": "mutable",
                  "name": "_mainCollection",
                  "nameLocation": "579:15:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10680,
                  "src": "564:30:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721Version_$10785",
                    "typeString": "contract IERC721Version"
                  },
                  "typeName": {
                    "id": 10658,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10657,
                      "name": "IERC721Version",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10785,
                      "src": "564:14:48"
                    },
                    "referencedDeclaration": 10785,
                    "src": "564:14:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Version_$10785",
                      "typeString": "contract IERC721Version"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "563:32:48"
            },
            "returnParameters": {
              "id": 10661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:0:48"
            },
            "scope": 10759,
            "src": "551:239:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10695,
              "nodeType": "Block",
              "src": "828:94:48",
              "statements": [
                {
                  "expression": {
                    "id": 10686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10683,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10653,
                      "src": "838:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10684,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "849:3:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "849:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "838:20:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10687,
                  "nodeType": "ExpressionStatement",
                  "src": "838:20:48"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "893:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "893:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10691,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "905:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "905:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10688,
                      "name": "EthTransferReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10990,
                      "src": "873:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:42:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10694,
                  "nodeType": "EmitStatement",
                  "src": "868:47:48"
                }
              ]
            },
            "id": 10696,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:2:48"
            },
            "returnParameters": {
              "id": 10682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "828:0:48"
            },
            "scope": 10759,
            "src": "802:120:48",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10703,
              "nodeType": "Block",
              "src": "982:17:48",
              "statements": [
                {
                  "expression": {
                    "id": 10701,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10653,
                    "src": "990:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10700,
                  "id": 10702,
                  "nodeType": "Return",
                  "src": "983:14:48"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 10704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "937:10:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:2:48"
            },
            "returnParameters": {
              "id": 10700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10699,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10704,
                  "src": "973:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "972:9:48"
            },
            "scope": 10759,
            "src": "928:71:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10976
            ],
            "body": {
              "id": 10712,
              "nodeType": "Block",
              "src": "1068:28:48",
              "statements": [
                {
                  "expression": {
                    "id": 10710,
                    "name": "mainTokenOfProject",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10656,
                    "src": "1076:18:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Version_$10785",
                      "typeString": "contract IERC721Version"
                    }
                  },
                  "functionReturnParameters": 10709,
                  "id": 10711,
                  "nodeType": "Return",
                  "src": "1069:25:48"
                }
              ]
            },
            "functionSelector": "4de046d5",
            "id": 10713,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMainToken",
            "nameLocation": "1014:12:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1026:2:48"
            },
            "returnParameters": {
              "id": 10709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10708,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10713,
                  "src": "1052:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721Version_$10785",
                    "typeString": "contract IERC721Version"
                  },
                  "typeName": {
                    "id": 10707,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10706,
                      "name": "IERC721Version",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10785,
                      "src": "1052:14:48"
                    },
                    "referencedDeclaration": 10785,
                    "src": "1052:14:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Version_$10785",
                      "typeString": "contract IERC721Version"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1051:16:48"
            },
            "scope": 10759,
            "src": "1005:91:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10727,
              "nodeType": "Block",
              "src": "1177:40:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10723,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10715,
                        "src": "1195:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 10724,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10717,
                        "src": "1202:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10722,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10758,
                      "src": "1185:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 10725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:25:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10726,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:25:48"
                }
              ]
            },
            "functionSelector": "64a197f3",
            "id": 10728,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10720,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10719,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1167:9:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "1167:9:48"
              }
            ],
            "name": "sendETH",
            "nameLocation": "1112:7:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10715,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1136:5:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10728,
                  "src": "1120:21:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:15:48",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10717,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1151:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10728,
                  "src": "1143:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1119:40:48"
            },
            "returnParameters": {
              "id": 10721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:48"
            },
            "scope": 10759,
            "src": "1103:114:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10757,
              "nodeType": "Block",
              "src": "1292:176:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10736,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10732,
                          "src": "1310:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 10737,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10653,
                          "src": "1321:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1310:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 10739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1330:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 10735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1302:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:49:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10741,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:49:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10745,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10732,
                        "src": "1379:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10742,
                        "name": "destAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10730,
                        "src": "1361:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 10744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1361:17:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:25:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10747,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:25:48"
                },
                {
                  "expression": {
                    "id": 10750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10748,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10653,
                      "src": "1396:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 10749,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10732,
                      "src": "1407:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1396:17:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10751,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:17:48"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10753,
                        "name": "destAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10730,
                        "src": "1444:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 10754,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10732,
                        "src": "1454:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10752,
                      "name": "EtherWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10996,
                      "src": "1428:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:33:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10756,
                  "nodeType": "EmitStatement",
                  "src": "1423:38:48"
                }
              ]
            },
            "id": 10758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "1232:9:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10730,
                  "mutability": "mutable",
                  "name": "destAddr",
                  "nameLocation": "1259:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10758,
                  "src": "1243:24:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:15:48",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10732,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1277:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10758,
                  "src": "1269:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:43:48"
            },
            "returnParameters": {
              "id": 10734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1292:0:48"
            },
            "scope": 10759,
            "src": "1223:245:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 10760,
        "src": "313:1158:48",
        "usedErrors": []
      }
    ],
    "src": "32:1439:48"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-08-15T10:35:57.452Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}