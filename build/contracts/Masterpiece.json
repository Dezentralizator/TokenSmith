{
  "contractName": "Masterpiece",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Masterpiece.sol\":\"Masterpiece\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0db2a6141fa677ae237b5f954d7af76553aa436855d32abca3110d92e9b56ec4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7af446b3a4212749257751ba805faec614b481eea69a2a49c931c9b38a6c7e1c\",\"dweb:/ipfs/QmchQ5ruA6pvh9aGKeQuez9PmuZ7FGQigivYTCSgx7CHj6\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xe1d0cd92e6827b0ca89925a59ec0eadc2b444aa3dd430fecb752a93c36436991\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf6b448bf512c72350a4aaeeb0053e7f112c278cd9bdd7eb04c2f7b40b24f4dc\",\"dweb:/ipfs/Qmd1o6mVH7xLRg6yQ7Hza51bjARb2UA38LXsbTNRG9tvRu\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x089922faffaa6662249c3fbea3bec2dc1d78a145253a4dbf9e91b7df6a434cf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1b83cc2a7127ce6a4ca5c8ffa74013701ebe66d7232717a5acb6572e143d738\",\"dweb:/ipfs/QmWpyQwnkLkz5r4jS69R8Ax5jP6Yp7eNCLjb6gZbfhg3Tm\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol\":{\"keccak256\":\"0x7cdc887a364b6e3f9669bb4b16582e135121437399ac69d41db15012e09b96cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1c4fcd6eafe8f6b8daf541a2cccfcd44368aa0a697c567a5b875edc8c43fea\",\"dweb:/ipfs/QmcN4HhvYveWTtcGfUY3vnzSbJyAtmgvprUW58rDLY7Vdf\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x9bc4d7eb03c4e87fd5122e03cdff5f60fa360d76925980ad022b2c6fac9876f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c6d7cfaac6b54599068126b75474c86ccbbaf386c3581abf82d9cda21b35c81\",\"dweb:/ipfs/QmPZteoCvkiUgv4TZxv2wiEKR5KqM83UCohHnSGw1RytpM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x2e109f03a05809288a1478d4d9fcd0804229207e18d1164ce0597fb0958a159c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9495415607fcbd1c940e726f396c46892af8c8772247c002650deacaf5199fb\",\"dweb:/ipfs/QmagLfEk1NCaJEMVDP3ix9BmXy6mccVUMfKAbWQFtjkjvJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]},\"project:/contracts/ContestGovernor.sol\":{\"keccak256\":\"0x51cc37e0a243385707be8b2310d8897c34d0e868ca7ebc367c802b4ad2d94981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e57a494aa5031c4e2d9b0c89b9de5a42ea6758530238baded092eed5612b2db\",\"dweb:/ipfs/Qmc2mdVX2U7CkDNt3pgjh63YWxeRNPGN143xQhS2ciQw7v\"]},\"project:/contracts/ERC721Version.sol\":{\"keccak256\":\"0x75c031699509e9796c73efda0e940391ff1ae81c5b18a2427fe7b62779bab60f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79848548ab93808d4683a5b7a39befd64fcb4125ec77e0f370c8f660b50f1864\",\"dweb:/ipfs/QmPBVyN8cyVmSgUfzVN3UGbEDKJciwDjpn6VMokjZgqWmg\"]},\"project:/contracts/GovernanceExtensions/GovernorContest.sol\":{\"keccak256\":\"0x8251908a80f32a2293ff04da03ecc72b5f90283f306ff2de81cb5a01cadfc3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbc352e84377bd455ae18d0623825859b517b3cb0cfd4d83597ccf36152f7bd\",\"dweb:/ipfs/QmbDpSbGkpL3C3iM6cdTLo6AspyxMQZiMj6jC77UZ4QGcr\"]},\"project:/contracts/GovernanceExtensions/GovernorVotes.sol\":{\"keccak256\":\"0xc1435ae09e7784dd1e5cfdfbea3126e149e69c2b65471339e0bb25c231ca62aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://370b17b2eed3cbdd8a8ee257080e38095f0f07c437fd8f2132d4f2edbfb9764c\",\"dweb:/ipfs/Qmc9EtyJN44dYj7dYdXNVjB95yjd2jYGahj7f5Xm6TZsE3\"]},\"project:/contracts/GovernanceExtensions/GovernorVotesQuorumFraction.sol\":{\"keccak256\":\"0xc3dee116eda4152b8e6ff4b51cc9cce35bc9ce27b1ea91e95f7f381315bcb78d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b42a49c70f50b2fc56a2fe58ee9e9a4b0d4250223e3b3001d5c047fa9293f65b\",\"dweb:/ipfs/QmdadAsLSAYFingn2khRfh5NFUvmETRTyig9Fh3i4skrPY\"]},\"project:/contracts/Masterpiece.sol\":{\"keccak256\":\"0x9bbbcdd1e8a52a0a0ed07948642a818d5f3c594236fb3469740ff2da7eb29fd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e056c3c64a18515d56bb74d049b64b5942a5761963f6ad03f44d336e80f0aa34\",\"dweb:/ipfs/QmPdFm7aDrjhSuzd8B9aEfEz9LViqQbHvR3AabNXPRN8RB\"]},\"project:/contracts/SimpleTreasury.sol\":{\"keccak256\":\"0x62b0c3fe9c9acbc2d5c88d9c692855f7dfff0d68ca41650c510996f90ba72491\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d122528aa8835871d60083da8d18766d198b7292b7152594ad36de56adbbdbb\",\"dweb:/ipfs/QmZAe8DbpJcAjBhXKhyU2MVVH4E7BEmmk1wDfZCy4mWNCh\"]},\"project:/contracts/interfaces/IERC721Version.sol\":{\"keccak256\":\"0x1c7242bc08bd659ff5ee17b7ff779d7450fa0c56e601962844f97564ce381d98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7ad4826f6a6fe62678a1e0977b096e286aef5fd5bafdd0057c217f708c2071b\",\"dweb:/ipfs/QmWyZU44X9bhh2pjhEv7xAkYXez37m55tuBbZRA2b38Bgt\"]},\"project:/contracts/interfaces/IGovernorContest.sol\":{\"keccak256\":\"0x60106b334ac96385ebe1c0419007a69f0ed537843dc364a994d418bfa6b8b2e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://054511b05cc88b0bad465d57aa5398317de363b084f1df730b8709a9381a16ee\",\"dweb:/ipfs/QmQaFy5TWUAn6Nmkdqf8p4UozqwSMWMCwieAVf5LM5zTrw\"]},\"project:/contracts/interfaces/ISimpleTreasury.sol\":{\"keccak256\":\"0x870ac8509ddfac73e7afb424d0a331183d9bb296e75e16b98d9735e0edf29248\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e30cde919871844928850744dc2a8a2f1a1c1d6c9cbf2965de1674ad94d840e\",\"dweb:/ipfs/QmVxThHkDC5CmEhE8sU22Lo8aJRFEBQgedLTJGrYZxVPrJ\"]},\"project:/contracts/utils/ArraySlicerMemory.sol\":{\"keccak256\":\"0x4c4300c13798c405ceb1302485ee5b4e1f1036a2528ea0277aec40ebe66484ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0336e830b39e97995088b2f63beba0ef70c4257438137fd6749fd890bfe6a57\",\"dweb:/ipfs/QmYyDpU3NptbqjbVQe6kKYenBWv9DfsW5gdBUCezJ2xQ2G\"]},\"project:/contracts/utils/ArraySort.sol\":{\"keccak256\":\"0xa6e0dd063ffc5951b8221d630a18af3e2c971e4fdc331e42729c0585594a9592\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5489f69984c7927a1b078a4a736d19f4112a5901ace5d9a3678a40e9d57e978\",\"dweb:/ipfs/Qme8RriZPAbwpMpyp8dsCdvabeewqWoX8n51gXpjR6jXiy\"]}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b5060405162006466380380620064668339810160408190526100319161033b565b818160405161003f90610252565b61004a9291906103ca565b604051809103906000f080158015610066573d6000803e3d6000fd5b506001600160a01b0316608081905260405161008190610260565b6001600160a01b039091168152602001604051809103906000f0801580156100ad573d6000803e3d6000fd5b506001600160a01b031660a0819052604080516361d027b360e01b815290516361d027b3916004808201926020929091908290030181865afa1580156100f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011b91906103f8565b6001600160a01b0390811660c0819052608051604051633302dfed60e11b8152600481019290925290911690636605bfda90602401600060405180830381600087803b15801561016a57600080fd5b505af115801561017e573d6000803e3d6000fd5b505060805160c0516040516304634d8d60e01b81526001600160a01b03918216600482015260086024820152911692506304634d8d9150604401600060405180830381600087803b1580156101d257600080fd5b505af11580156101e6573d6000803e3d6000fd5b505060805160a05160405163f2fde38b60e01b81526001600160a01b0391821660048201529116925063f2fde38b9150602401600060405180830381600087803b15801561023357600080fd5b505af1158015610247573d6000803e3d6000fd5b505050505050610428565b613596806200048c83390190565b612a448062003a2283390190565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561029f578181015183820152602001610287565b838111156102ae576000848401525b50505050565b600082601f8301126102c557600080fd5b81516001600160401b03808211156102df576102df61026e565b604051601f8301601f19908116603f011681019082821181831017156103075761030761026e565b8160405283815286602085880101111561032057600080fd5b610331846020830160208901610284565b9695505050505050565b6000806040838503121561034e57600080fd5b82516001600160401b038082111561036557600080fd5b610371868387016102b4565b9350602085015191508082111561038757600080fd5b50610394858286016102b4565b9150509250929050565b600081518084526103b6816020860160208601610284565b601f01601f19169290920160200192915050565b6040815260006103dd604083018561039e565b82810360208401526103ef818561039e565b95945050505050565b60006020828403121561040a57600080fd5b81516001600160a01b038116811461042157600080fd5b9392505050565b60805160a05160c051603f6200044d600039600050506000505060005050603f6000f3fe6080604052600080fdfea264697066735822122047369c23284b24f17c87456f045468156a3b0710a4f3d03e14d6dd00cc35dac864736f6c634300080b0033612710601155610180604052600061016090815261014090815262000029906012906001620001ae565b503480156200003757600080fd5b5060405162003596380380620035968339810160408190526200005a91620003e4565b81604051806040016040528060018152602001603160f81b815250838381600290805190602001906200008f92919062000212565b508051620000a590600390602084019062000212565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190960120905292909252610120525062000142336200015c565b5050601380546001600160a01b031916331790556200048b565b601080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805482825590600052602060002090810192821562000200579160200282015b82811115620002005782518051620001ef91849160209091019062000212565b5091602001919060010190620001cf565b506200020e9291506200029d565b5090565b82805462000220906200044e565b90600052602060002090601f0160209004810192826200024457600085556200028f565b82601f106200025f57805160ff19168380011785556200028f565b828001600101855582156200028f579182015b828111156200028f57825182559160200191906001019062000272565b506200020e929150620002be565b808211156200020e576000620002b48282620002d5565b506001016200029d565b5b808211156200020e5760008155600101620002bf565b508054620002e3906200044e565b6000825580601f10620002f4575050565b601f016020900490600052602060002090810190620003149190620002be565b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200033f57600080fd5b81516001600160401b03808211156200035c576200035c62000317565b604051601f8301601f19908116603f0116810190828211818310171562000387576200038762000317565b81604052838152602092508683858801011115620003a457600080fd5b600091505b83821015620003c85785820183015181830184015290820190620003a9565b83821115620003da5760008385830101525b9695505050505050565b60008060408385031215620003f857600080fd5b82516001600160401b03808211156200041057600080fd5b6200041e868387016200032d565b935060208501519150808211156200043557600080fd5b5062000444858286016200032d565b9150509250929050565b600181811c908216806200046357607f821691505b602082108114156200048557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516130bb620004db6000396000611793015260006117e2015260006117bd01526000611716015260006117400152600061176a01526130bb6000f3fe6080604052600436106102255760003560e01c80636605bfda11610123578063b5651b5a116100ab578063d5abeb011161006f578063d5abeb01146106a1578063e927fc5c146106c1578063e985e9c5146106e1578063f2fde38b1461072a578063f7c6aac51461074a57600080fd5b8063b5651b5a14610601578063b88d4fde14610621578063c3cda52014610641578063c5f956af14610661578063c87b56dd1461068157600080fd5b80638da5cb5b116100f25780638da5cb5b1461056e5780638e539e8c1461058c57806395d89b41146105ac5780639ab24eb0146105c1578063a22cb465146105e157600080fd5b80636605bfda146104f957806370a0823114610519578063715018a6146105395780637ecebe001461054e57600080fd5b80632f745c59116101b157806342842e0e1161017557806342842e0e146104405780634f6ccce714610460578063587cde1e146104805780635c19a95c146104b95780636352211e146104d957600080fd5b80632f745c591461039957806335db70b5146103b95780633644e515146103f85780633a46b1a81461040d57806340c10f191461042d57600080fd5b8063081812fc116101f8578063081812fc146102c3578063095ea7b3146102fb57806318160ddd1461031b57806323b872dd1461033a5780632a55205a1461035a57600080fd5b806301ffc9a71461022a578063020befcd1461025f57806304634d8d1461028c57806306fdde03146102ae575b600080fd5b34801561023657600080fd5b5061024a610245366004612a13565b61076a565b60405190151581526020015b60405180910390f35b34801561026b57600080fd5b5061027f61027a366004612a30565b610795565b6040516102569190612aa1565b34801561029857600080fd5b506102ac6102a7366004612ad0565b610841565b005b3480156102ba57600080fd5b5061027f610857565b3480156102cf57600080fd5b506102e36102de366004612a30565b6108e9565b6040516001600160a01b039091168152602001610256565b34801561030757600080fd5b506102ac610316366004612b13565b610910565b34801561032757600080fd5b50600a545b604051908152602001610256565b34801561034657600080fd5b506102ac610355366004612b3d565b610a2b565b34801561036657600080fd5b5061037a610375366004612b79565b610a5c565b604080516001600160a01b039093168352602083019190915201610256565b3480156103a557600080fd5b5061032c6103b4366004612b13565b610b08565b3480156103c557600080fd5b506011546103e090600160801b90046001600160801b031681565b6040516001600160801b039091168152602001610256565b34801561040457600080fd5b5061032c610b9e565b34801561041957600080fd5b5061032c610428366004612b13565b610bad565b6102ac61043b366004612b13565b610bd6565b34801561044c57600080fd5b506102ac61045b366004612b3d565b610c9f565b34801561046c57600080fd5b5061032c61047b366004612a30565b610cba565b34801561048c57600080fd5b506102e361049b366004612b9b565b6001600160a01b039081166000908152600c60205260409020541690565b3480156104c557600080fd5b506102ac6104d4366004612b9b565b610d4d565b3480156104e557600080fd5b506102e36104f4366004612a30565b610d58565b34801561050557600080fd5b506102ac610514366004612b9b565b610db8565b34801561052557600080fd5b5061032c610534366004612b9b565b610de2565b34801561054557600080fd5b506102ac610e68565b34801561055a57600080fd5b5061032c610569366004612b9b565b610e7c565b34801561057a57600080fd5b506010546001600160a01b03166102e3565b34801561059857600080fd5b5061032c6105a7366004612a30565b610e9a565b3480156105b857600080fd5b5061027f610ef6565b3480156105cd57600080fd5b5061032c6105dc366004612b9b565b610f05565b3480156105ed57600080fd5b506102ac6105fc366004612bb6565b610f26565b34801561060d57600080fd5b5061027f61061c366004612a30565b610f31565b34801561062d57600080fd5b506102ac61063c366004612bfd565b610fe0565b34801561064d57600080fd5b506102ac61065c366004612cd9565b611018565b34801561066d57600080fd5b506014546102e3906001600160a01b031681565b34801561068d57600080fd5b5061027f61069c366004612a30565b611145565b3480156106ad57600080fd5b506011546103e0906001600160801b031681565b3480156106cd57600080fd5b506013546102e3906001600160a01b031681565b3480156106ed57600080fd5b5061024a6106fc366004612d39565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561073657600080fd5b506102ac610745366004612b9b565b6111ab565b34801561075657600080fd5b506102ac610765366004612d6c565b611224565b60006001600160e01b031982166342a3b19f60e01b148061078f575061078f826112b4565b92915050565b601281815481106107a557600080fd5b9060005260206000200160009150905080546107c090612dde565b80601f01602080910402602001604051908101604052809291908181526020018280546107ec90612dde565b80156108395780601f1061080e57610100808354040283529160200191610839565b820191906000526020600020905b81548152906001019060200180831161081c57829003601f168201915b505050505081565b6108496112bf565b6108538282611319565b5050565b60606002805461086690612dde565b80601f016020809104026020016040519081016040528092919081815260200182805461089290612dde565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b5050505050905090565b60006108f482611416565b506000908152600660205260409020546001600160a01b031690565b600061091b82610d58565b9050806001600160a01b0316836001600160a01b0316141561098e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806109aa57506109aa81336106fc565b610a1c5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610985565b610a268383611475565b505050565b610a3533826114e3565b610a515760405162461bcd60e51b815260040161098590612e13565b610a26838383611562565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b0316928201929092528291610ad15750604080518082019091526000546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610af0906001600160601b031687612e77565b610afa9190612eac565b915196919550909350505050565b6000610b1383610de2565b8210610b755760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610985565b506001600160a01b03919091166000908152600860209081526040808320938352929052205490565b6000610ba8611709565b905090565b6001600160a01b0382166000908152600d60205260408120610bcf9083611830565b9392505050565b601154600160801b90046001600160801b03163414610bf457600080fd5b610bfe828261193f565b6013546001600160a01b03166108fc6064610c1a346050612e77565b610c249190612eac565b6040518115909202916000818181858888f19350505050158015610c4c573d6000803e3d6000fd5b50601480546001600160a01b0316906108fc90606490610c6d903490612e77565b610c779190612eac565b6040518115909202916000818181858888f19350505050158015610a26573d6000803e3d6000fd5b610a2683838360405180602001604052806000815250610fe0565b6000610cc5600a5490565b8210610d285760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610985565b600a8281548110610d3b57610d3b612ec0565b90600052602060002001549050919050565b336108538183611a05565b6000818152600460205260408120546001600160a01b03168061078f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610985565b610dc06112bf565b601480546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610e4c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610985565b506001600160a01b031660009081526005602052604090205490565b610e706112bf565b610e7a6000611a77565b565b6001600160a01b0381166000908152600f602052604081205461078f565b6000438210610eeb5760405162461bcd60e51b815260206004820152601a60248201527f566f7465733a20626c6f636b206e6f7420796574206d696e65640000000000006044820152606401610985565b61078f600e83611830565b60606003805461086690612dde565b6001600160a01b0381166000908152600d6020526040812061078f90611ac9565b610853338383611b25565b606060128281548110610f4657610f46612ec0565b906000526020600020018054610f5b90612dde565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8790612dde565b8015610fd45780601f10610fa957610100808354040283529160200191610fd4565b820191906000526020600020905b815481529060010190602001808311610fb757829003601f168201915b50505050509050919050565b610fea33836114e3565b6110065760405162461bcd60e51b815260040161098590612e13565b61101284848484611bf4565b50505050565b834211156110685760405162461bcd60e51b815260206004820152601860248201527f566f7465733a207369676e6174757265206578706972656400000000000000006044820152606401610985565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906110e2906110da9060a00160405160208183030381529060405280519060200120611c27565b858585611c75565b90506110ed81611c9d565b86146111325760405162461bcd60e51b8152602060048201526014602482015273566f7465733a20696e76616c6964206e6f6e636560601b6044820152606401610985565b61113c8188611a05565b50505050505050565b606061115082611416565b600061115a611cc5565b9050600081511161117a5760405180602001604052806000815250610bcf565b8061118484611cf0565b604051602001611195929190612ed6565b6040516020818303038152906040529392505050565b6111b36112bf565b6001600160a01b0381166112185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610985565b61122181611a77565b50565b60128054600181018255600091909152611261907fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344401838361296d565b507f94c4cb73b68c53604ffce725087511ecf550e2e1a4f83b18baa2fd5ba2fde27f33838360016012805490506112989190612f05565b6040516112a89493929190612f1c565b60405180910390a15050565b600061078f82611dee565b6010546001600160a01b03163314610e7a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610985565b6127106001600160601b03821611156113875760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608401610985565b6001600160a01b0382166113dd5760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401610985565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600055565b6000818152600460205260409020546001600160a01b03166112215760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610985565b600081815260066020526040902080546001600160a01b0319166001600160a01b03841690811790915581906114aa82610d58565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806114ef83610d58565b9050806001600160a01b0316846001600160a01b0316148061153657506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b8061155a5750836001600160a01b031661154f846108e9565b6001600160a01b0316145b949350505050565b826001600160a01b031661157582610d58565b6001600160a01b0316146115d95760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610985565b6001600160a01b03821661163b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610985565b611646838383611e13565b611651600082611475565b6001600160a01b038316600090815260056020526040812080546001929061167a908490612f05565b90915550506001600160a01b03821660009081526005602052604081208054600192906116a8908490612f66565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561176257507f000000000000000000000000000000000000000000000000000000000000000046145b1561178c57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60004382106118815760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610985565b825460005b818110156118e657600061189a8284611e1e565b9050848660000182815481106118b2576118b2612ec0565b60009182526020909120015463ffffffff1611156118d2578092506118e0565b6118dd816001612f66565b91505b50611886565b811561192a57846118f8600184612f05565b8154811061190857611908612ec0565b60009182526020909120015464010000000090046001600160e01b031661192d565b60005b6001600160e01b031695945050505050565b6001600160a01b0382166119955760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610985565b6011546001600160801b031681106119fb5760405162461bcd60e51b8152602060048201526024808201527f4d617820737570706c792068617320616c7265616479206265656e2061636869604482015263195d995960e21b6064820152608401610985565b6108538282611e39565b6001600160a01b038281166000818152600c602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610a268183611a7286611f87565b611f92565b601080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546000908015611b125782611ae0600183612f05565b81548110611af057611af0612ec0565b60009182526020909120015464010000000090046001600160e01b0316611b15565b60005b6001600160e01b03169392505050565b816001600160a01b0316836001600160a01b03161415611b875760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610985565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611bff848484611562565b611c0b848484846120cf565b6110125760405162461bcd60e51b815260040161098590612f7e565b600061078f611c34611709565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611c86878787876121ca565b91509150611c93816122b7565b5095945050505050565b6001600160a01b0381166000908152600f602052604090208054600181018255905b50919050565b60606012600081548110611cdb57611cdb612ec0565b90600052602060002001805461086690612dde565b606081611d145750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d3e5780611d2881612fd0565b9150611d379050600a83612eac565b9150611d18565b60008167ffffffffffffffff811115611d5957611d59612be7565b6040519080825280601f01601f191660200182016040528015611d83576020820181803683370190505b5090505b841561155a57611d98600183612f05565b9150611da5600a86612feb565b611db0906030612f66565b60f81b818381518110611dc557611dc5612ec0565b60200101906001600160f81b031916908160001a905350611de7600a86612eac565b9450611d87565b60006001600160e01b0319821663780e9d6360e01b148061078f575061078f82612472565b610a268383836124b2565b6000611e2d6002848418612eac565b610bcf90848416612f66565b6001600160a01b038216611e8f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610985565b6000818152600460205260409020546001600160a01b031615611ef45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610985565b611f0060008383611e13565b6001600160a01b0382166000908152600560205260408120805460019290611f29908490612f66565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600061078f82610de2565b816001600160a01b0316836001600160a01b031614158015611fb45750600081115b15610a26576001600160a01b03831615612042576001600160a01b0383166000908152600d602052604081208190611fef9061256a85612576565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612037929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610a26576001600160a01b0382166000908152600d602052604081208190612078906125a485612576565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516120c0929190918252602082015260400190565b60405180910390a25050505050565b60006001600160a01b0384163b156121c257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612113903390899088908890600401612fff565b6020604051808303816000875af192505050801561214e575060408051601f3d908101601f1916820190925261214b9181019061303c565b60015b6121a8573d80801561217c576040519150601f19603f3d011682016040523d82523d6000602084013e612181565b606091505b5080516121a05760405162461bcd60e51b815260040161098590612f7e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061155a565b50600161155a565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561220157506000905060036122ae565b8460ff16601b1415801561221957508460ff16601c14155b1561222a57506000905060046122ae565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561227e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166122a7576000600192509250506122ae565b9150600090505b94509492505050565b60008160048111156122cb576122cb613059565b14156122d45750565b60018160048111156122e8576122e8613059565b14156123365760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610985565b600281600481111561234a5761234a613059565b14156123985760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610985565b60038160048111156123ac576123ac613059565b14156124055760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610985565b600481600481111561241957612419613059565b14156112215760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610985565b60006001600160e01b031982166380ac58cd60e01b14806124a357506001600160e01b03198216635b5e139f60e01b145b8061078f575061078f826125b0565b6001600160a01b03831661250d5761250881600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b612530565b816001600160a01b0316836001600160a01b0316146125305761253083826125e5565b6001600160a01b03821661254757610a2681612682565b826001600160a01b0316826001600160a01b031614610a2657610a268282612731565b6000610bcf8284612f05565b6000806125988561259361258988611ac9565b868863ffffffff16565b612775565b91509150935093915050565b6000610bcf8284612f66565b60006001600160e01b0319821663152a902d60e11b148061078f57506301ffc9a760e01b6001600160e01b031983161461078f565b600060016125f284610de2565b6125fc9190612f05565b60008381526009602052604090205490915080821461264f576001600160a01b03841660009081526008602090815260408083208584528252808320548484528184208190558352600990915290208190555b5060009182526009602090815260408084208490556001600160a01b039094168352600881528383209183525290812055565b600a5460009061269490600190612f05565b6000838152600b6020526040812054600a80549394509092849081106126bc576126bc612ec0565b9060005260206000200154905080600a83815481106126dd576126dd612ec0565b6000918252602080832090910192909255828152600b9091526040808220849055858252812055600a8054806127155761271561306f565b6001900381819060005260206000200160009055905550505050565b600061273c83610de2565b6001600160a01b039093166000908152600860209081526040808320868452825280832085905593825260099052919091209190915550565b815460009081908161278686611ac9565b90506000821180156127c4575043866127a0600185612f05565b815481106127b0576127b0612ec0565b60009182526020909120015463ffffffff16145b15612824576127d28561289b565b866127de600185612f05565b815481106127ee576127ee612ec0565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550612892565b85600001604051806040016040528061283c43612908565b63ffffffff1681526020016128508861289b565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b95939450505050565b60006001600160e01b038211156129045760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610985565b5090565b600063ffffffff8211156129045760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610985565b82805461297990612dde565b90600052602060002090601f01602090048101928261299b57600085556129e1565b82601f106129b45782800160ff198235161785556129e1565b828001600101855582156129e1579182015b828111156129e15782358255916020019190600101906129c6565b506129049291505b8082111561290457600081556001016129e9565b6001600160e01b03198116811461122157600080fd5b600060208284031215612a2557600080fd5b8135610bcf816129fd565b600060208284031215612a4257600080fd5b5035919050565b60005b83811015612a64578181015183820152602001612a4c565b838111156110125750506000910152565b60008151808452612a8d816020860160208601612a49565b601f01601f19169290920160200192915050565b602081526000610bcf6020830184612a75565b80356001600160a01b0381168114612acb57600080fd5b919050565b60008060408385031215612ae357600080fd5b612aec83612ab4565b915060208301356001600160601b0381168114612b0857600080fd5b809150509250929050565b60008060408385031215612b2657600080fd5b612b2f83612ab4565b946020939093013593505050565b600080600060608486031215612b5257600080fd5b612b5b84612ab4565b9250612b6960208501612ab4565b9150604084013590509250925092565b60008060408385031215612b8c57600080fd5b50508035926020909101359150565b600060208284031215612bad57600080fd5b610bcf82612ab4565b60008060408385031215612bc957600080fd5b612bd283612ab4565b915060208301358015158114612b0857600080fd5b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612c1357600080fd5b612c1c85612ab4565b9350612c2a60208601612ab4565b925060408501359150606085013567ffffffffffffffff80821115612c4e57600080fd5b818701915087601f830112612c6257600080fd5b813581811115612c7457612c74612be7565b604051601f8201601f19908116603f01168101908382118183101715612c9c57612c9c612be7565b816040528281528a6020848701011115612cb557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060008060008060c08789031215612cf257600080fd5b612cfb87612ab4565b95506020870135945060408701359350606087013560ff81168114612d1f57600080fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215612d4c57600080fd5b612d5583612ab4565b9150612d6360208401612ab4565b90509250929050565b60008060208385031215612d7f57600080fd5b823567ffffffffffffffff80821115612d9757600080fd5b818501915085601f830112612dab57600080fd5b813581811115612dba57600080fd5b866020828501011115612dcc57600080fd5b60209290920196919550909350505050565b600181811c90821680612df257607f821691505b60208210811415611cbf57634e487b7160e01b600052602260045260246000fd5b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612e9157612e91612e61565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612ebb57612ebb612e96565b500490565b634e487b7160e01b600052603260045260246000fd5b60008351612ee8818460208801612a49565b835190830190612efc818360208801612a49565b01949350505050565b600082821015612f1757612f17612e61565b500390565b6001600160a01b038516815260606020820181905281018390528284608083013760006080848301015260006080601f19601f860116830101905082604083015295945050505050565b60008219821115612f7957612f79612e61565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415612fe457612fe4612e61565b5060010190565b600082612ffa57612ffa612e96565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061303290830184612a75565b9695505050505050565b60006020828403121561304e57600080fd5b8151610bcf816129fd565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122016608f1f5ba0f9144038a19867484dc52e2263d2f00dcdd4e2540b5b8106f5c264736f6c634300080b00336101a06040523480156200001257600080fd5b5060405162002a4438038062002a4483398101604081905262000035916200032b565b6004816040518060400160405280600c81526020016b476f7665726e6f72436f726560a01b81525083816200006f6200018f60201b60201c565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c052610120525050835162000115925060009150602085019062000277565b506001600160a01b038116610160526040518190620001349062000306565b6001600160a01b039091168152602001604051809103906000f08015801562000161573d6000803e3d6000fd5b506001600160a01b039081166101405292909216610180525062000187905081620001aa565b50506200039a565b6040805180820190915260018152603160f81b602082015290565b6064811115620002325760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a40160405180910390fd5b600680549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b82805462000285906200035d565b90600052602060002090601f016020900481019282620002a95760008555620002f4565b82601f10620002c457805160ff1916838001178555620002f4565b82800160010185558215620002f4579182015b82811115620002f4578251825591602001919060010190620002d7565b506200030292915062000314565b5090565b6105bf806200248583390190565b5b8082111562000302576000815560010162000315565b6000602082840312156200033e57600080fd5b81516001600160a01b03811681146200035657600080fd5b9392505050565b600181811c908216806200037257607f821691505b602082108114156200039457634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161016051610180516120696200041c6000396000818161055f0152818161188d015261191f01526000818161046301526116710152600081816103c501528181610be6015261172c01526000505060005050600050506000505060005050600050506120696000f3fe6080604052600436106101cd5760003560e01c806361d027b3116100f7578063e2a8605f11610095578063f8ce560a11610064578063f8ce560a146104ed578063fa9dd2e91461050d578063fb3100551461052d578063fc0c546a1461054d57600080fd5b8063e2a8605f1461049a578063eb9019d4146104ba578063f0ec6f281461029e578063f2c298be146104da57600080fd5b8063a7713a70116100d1578063a7713a7014610428578063b58131b01461043d578063d782f74d14610451578063db91caa81461048557600080fd5b806361d027b3146103b357806397c3d334146103ff5780639b3662bf1461041357600080fd5b8063438596321161016f5780635612db841161013e5780635612db84146103765780635939ee04146102075780635cfee20e1461039657806361461954146103ab57600080fd5b806343859632146102df5780634c933f27146102ff57806353358fc41461032c57806354fd4d501461034c57600080fd5b806306fdde03116101ab57806306fdde0314610248578063279688401461026a5780633932abb11461029e5780633e4f49e6146102b257600080fd5b806301ffc9a7146101d257806302a251a31461020757806306f3f9e614610226575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611a36565b610581565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061b2fa5b6040519081526020016101fe565b34801561023257600080fd5b50610246610241366004611a60565b6105b8565b005b34801561025457600080fd5b5061025d610618565b6040516101fe9190611a79565b34801561027657600080fd5b506102187f22e7757911643f60fa367b0ca7e4928ef50685f307d70ab7f82139a44bd9ebbb81565b3480156102aa57600080fd5b506001610218565b3480156102be57600080fd5b506102d26102cd366004611a60565b6106aa565b6040516101fe9190611ae4565b3480156102eb57600080fd5b506101f26102fa366004611b21565b6107ba565b34801561030b57600080fd5b5061031f61031a366004611bba565b610803565b6040516101fe9190611c58565b34801561033857600080fd5b50610218610347366004611ca5565b6109ae565b34801561035857600080fd5b506040805180820190915260018152603160f81b602082015261025d565b34801561038257600080fd5b50610218610391366004611a60565b610b14565b3480156103a257600080fd5b50610218610b68565b610218610e90565b3480156103bf57600080fd5b506103e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fe565b34801561040b57600080fd5b506064610218565b34801561041f57600080fd5b5061031f6110db565b34801561043457600080fd5b50600654610218565b34801561044957600080fd5b506000610218565b34801561045d57600080fd5b506103e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561049157600080fd5b5061021861119e565b3480156104a657600080fd5b506102186104b5366004611a60565b6111ae565b3480156104c657600080fd5b506102186104d5366004611cc2565b6111cf565b6102466104e8366004611cee565b6111f7565b3480156104f957600080fd5b50610218610508366004611a60565b6113c5565b34801561051957600080fd5b50610218610528366004611a60565b6113d0565b34801561053957600080fd5b50610218610548366004611a60565b6113e8565b34801561055957600080fd5b506103e77f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216631cb59ed960e01b14806105b257506301ffc9a760e01b6001600160e01b03198316145b92915050565b33301461060c5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e6365000000000000000060448201526064015b60405180910390fd5b6106158161142d565b50565b60606000805461062790611d5f565b80601f016020809104026020016040519081016040528092919081815260200182805461065390611d5f565b80156106a05780601f10610675576101008083540402835291602001916106a0565b820191906000526020600020905b81548152906001019060200180831161068357829003601f168201915b5050505050905090565b600080600183815481106106c0576106c0611d9a565b60009182526020909120600890910201600581015490915060ff16156106e95750600592915050565b6005810154610100900460ff16156107045750600292915050565b600061070f846113d0565b90508061075e5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610603565b43811061076f575060009392505050565b600061077a85610b14565b905043811061078e57506001949350505050565b6000610799866113e8565b90504381106107ae5750600395945050505050565b50600495945050505050565b6000600183815481106107cf576107cf611d9a565b600091825260208083206001600160a01b03861684526006600890930201919091019052604090205460ff16905092915050565b8051600180546060929160009161082291610508916103919190611dc6565b90506000805b8381101561089457826005600088848151811061084757610847611d9a565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020541115610884578161088081611ddd565b9250505b61088d81611ddd565b9050610828565b506000816001600160401b038111156108af576108af611b51565b6040519080825280602002602001820160405280156108d8578160200160208202803683370190505b509050816108e95795945050505050565b60005b848110156109a457836005600089848151811061090b5761090b611d9a565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020541115610994578261094481611df8565b93505086818151811061095957610959611d9a565b602002602001015182848151811061097357610973611d9a565b60200260200101906001600160a01b031690816001600160a01b0316815250505b61099d81611ddd565b90506108ec565b5095945050505050565b60018054600091339183916109c291611dc6565b90506000600182815481106109d9576109d9611d9a565b60009182526020909120600890910201905060036109f6836106aa565b6005811115610a0757610a07611ace565b14610a605760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610603565b604080516020810190915260018201546001600160401b031690819052600090610a8b9085906111cf565b6001600160a01b038716600090815260056020526040812080549293508392909190610ab8908490611e0f565b9091555050604080518481526001600160a01b038881166020830152918101839052908516907f5b4be8a1f7c35d6610ffcf815901a056e72caa6d8cdd427db5cb56982d8dfd949060600160405180910390a295945050505050565b6000610b5960018381548110610b2c57610b2c611d9a565b6000918252602091829020604080519384019052600160089092020101546001600160401b031681525190565b6001600160401b031692915050565b600080610b7a336104d5600143611dc6565b1015610be25760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b6064820152608401610603565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c669190611e27565b6001549091506005610c7c6102cd600184611dc6565b6005811115610c8d57610c8d611ace565b1480610cb757506002610ca46102cd600184611dc6565b6005811115610cb557610cb5611ace565b145b610d035760405162461bcd60e51b815260206004820152601a60248201527f50726576696f757320636f6e74657374207374696c6c206f6e2e0000000000006044820152606401610603565b6001805460009190610d13611d9a565b60009182526020918290206040805193840190526008919091020160018101546001600160401b031691829052915015610d995760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610603565b6000610da560016114f5565b610dae436114f5565b610db89190611e40565b90506000610dc761b2fa6114f5565b610dd19083611e40565b90506000610de061b2fa6114f5565b610dea9083611e40565b9050610df68484611561565b610e036001850183611561565b610e106002850182611561565b600380546004860155848101879055546040805187815233602082015280820192909252606082018890526001600160401b03858116608084015284811660a0840152831660c0830152517f2d70fad5356323d82a1b2dcb7638393dff7d9691977a6cbcb3faf46d194d64959181900360e00190a1509295945050505050565b600180546000918291610ea39190611dc6565b90506000610eb0826106aa565b90506004816005811115610ec657610ec6611ace565b14610f315760405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f723a20546865726520617265206e6f20636f6d706c657465646044820152741031b7b73a32b9ba39903a379032bc32b1baba329760591b6064820152608401610603565b6000610f3b6110db565b90506000610f4882610803565b9050805160001415610fce576001808581548110610f6857610f68611d9a565b906000526020600020906008020160050160016101000a81548160ff0219169083151502179055507fcce8fbf2e6c9a589c54910eef6d841be296f721adbc0b43a42d07a0fd186f17184604051610fc191815260200190565b60405180910390a16110d2565b6001808581548110610fe257610fe2611d9a565b600091825260209182902060089190910201600501805460ff1916921515929092179091556040518581527f118cbce212362b04a68e2ff462e3d906f3de391938f311af5f5625e529470dc7910160405180910390a160405163b6aac1cb60e01b815273__Sorter________________________________9063b6aac1cb90611072908490600590600401611e6b565b600060405180830381865af415801561108f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b79190810190611ebc565b5060006110c4825161157f565b90506110d08282611662565b505b50919392505050565b6001805460609173__Slicer________________________________91636a41bd8a9160039161110c908290611dc6565b8154811061111c5761111c611d9a565b9060005260206000209060080201600401546040518363ffffffff1660e01b8152600401611154929190918252602082015260400190565b600060405180830381865af4158015611171573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111999190810190611ebc565b905090565b6001805460009161119991611dc6565b600281815481106111be57600080fd5b600091825260209091200154905081565b60006111f083836111eb60408051602081019091526000815290565b611864565b9392505050565b6001805460009161120791611dc6565b90504361124a6001838154811061122057611220611d9a565b6000918252602091829020604080519384019052600890910201546001600160401b031681525190565b6001600160401b031610801561127d57504361127260018381548110610b2c57610b2c611d9a565b6001600160401b0316115b6112d55760405162461bcd60e51b815260206004820152602360248201527f54686973206973206e6f742074686520726567697374726174696f6e207065726044820152621a5bd960ea1b6064820152608401610603565b600181815481106112e8576112e8611d9a565b600091825260208083203384526007600890930201919091019052604090205460ff166113955760038054600181810183556000929092527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191633179055805481908390811061136657611366611d9a565b60009182526020808320338452600892909202909101600701905260409020805460ff19169115159190911790555b3360009081526004602052604090206113af9084846119a6565b5050336000908152600560205260408120555050565b60006105b282611902565b6000610b596001838154811061122057611220611d9a565b6000610b596001838154811061140057611400611d9a565b6000918252602091829020604080519384019052600260089092020101546001600160401b031681525190565b60648111156114b05760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610603565b600680549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b60006001600160401b0382111561155d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610603565b5090565b815467ffffffffffffffff19166001600160401b0391909116179055565b6060600061158e836001611e0f565b6001600160401b038111156115a5576115a5611b51565b6040519080825280602002602001820160405280156115ce578160200160208202803683370190505b50905060005b8381101561161e576115e68185611dc6565b6115f1906002611f4a565b82828151811061160357611603611d9a565b602090810291909101015261161781611ddd565b90506115d4565b5061162a836001611e0f565b6116349084611f4a565b61163f906004611e0f565b81848151811061165157611651611d9a565b602090810291909101015292915050565b815160005b8181101561185e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f7c6aac5600460008785815181106116b4576116b4611d9a565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206040518263ffffffff1660e01b81526004016116f89190611f69565b600060405180830381600087803b15801561171257600080fd5b505af1158015611726573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166364a197f385838151811061176b5761176b611d9a565b602002602001015185858151811061178557611785611d9a565b6020026020010151600180808054905061179f9190611dc6565b815481106117af576117af611d9a565b9060005260206000209060080201600301548786815181106117d3576117d3611d9a565b60200260200101516117e59190611f4a565b6117ef9190612011565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561183557600080fd5b505af1158015611849573d6000803e3d6000fd5b505050508061185790611ddd565b9050611667565b50505050565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a890604401602060405180830381865afa1580156118d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fa9190611e27565b949350505050565b60006064600654604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c90602401602060405180830381865afa15801561196e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119929190611e27565b61199c9190611f4a565b6105b29190612011565b8280546119b290611d5f565b90600052602060002090601f0160209004810192826119d45760008555611a1a565b82601f106119ed5782800160ff19823516178555611a1a565b82800160010185558215611a1a579182015b82811115611a1a5782358255916020019190600101906119ff565b5061155d9291505b8082111561155d5760008155600101611a22565b600060208284031215611a4857600080fd5b81356001600160e01b0319811681146111f057600080fd5b600060208284031215611a7257600080fd5b5035919050565b600060208083528351808285015260005b81811015611aa657858101830151858201604001528201611a8a565b81811115611ab8576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052602160045260246000fd5b6020810160068310611b0657634e487b7160e01b600052602160045260246000fd5b91905290565b6001600160a01b038116811461061557600080fd5b60008060408385031215611b3457600080fd5b823591506020830135611b4681611b0c565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611b8f57611b8f611b51565b604052919050565b60006001600160401b03821115611bb057611bb0611b51565b5060051b60200190565b60006020808385031215611bcd57600080fd5b82356001600160401b03811115611be357600080fd5b8301601f81018513611bf457600080fd5b8035611c07611c0282611b97565b611b67565b81815260059190911b82018301908381019087831115611c2657600080fd5b928401925b82841015611c4d578335611c3e81611b0c565b82529284019290840190611c2b565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611c995783516001600160a01b031683529284019291840191600101611c74565b50909695505050505050565b600060208284031215611cb757600080fd5b81356111f081611b0c565b60008060408385031215611cd557600080fd5b8235611ce081611b0c565b946020939093013593505050565b60008060208385031215611d0157600080fd5b82356001600160401b0380821115611d1857600080fd5b818501915085601f830112611d2c57600080fd5b813581811115611d3b57600080fd5b866020828501011115611d4d57600080fd5b60209290920196919550909350505050565b600181811c90821680611d7357607f821691505b60208210811415611d9457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611dd857611dd8611db0565b500390565b6000600019821415611df157611df1611db0565b5060010190565b600081611e0757611e07611db0565b506000190190565b60008219821115611e2257611e22611db0565b500190565b600060208284031215611e3957600080fd5b5051919050565b60006001600160401b03808316818516808303821115611e6257611e62611db0565b01949350505050565b604080825283519082018190526000906020906060840190828701845b82811015611ead5781516001600160a01b031684529284019290840190600101611e88565b50505092019290925292915050565b60006020808385031215611ecf57600080fd5b82516001600160401b03811115611ee557600080fd5b8301601f81018513611ef657600080fd5b8051611f04611c0282611b97565b81815260059190911b82018301908381019087831115611f2357600080fd5b928401925b82841015611c4d578351611f3b81611b0c565b82529284019290840190611f28565b6000816000190483118215151615611f6457611f64611db0565b500290565b600060208083526000845481600182811c915080831680611f8b57607f831692505b858310811415611fa957634e487b7160e01b85526022600452602485fd5b878601838152602001818015611fc65760018114611fd757612002565b60ff19861682528782019650612002565b60008b81526020902060005b86811015611ffc57815484820152908501908901611fe3565b83019750505b50949998505050505050505050565b60008261202e57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122006dfecfd1cfc304ca1f5aeac89755fa949903b6d95375291225e4a4b16e8c4d964736f6c634300080b003360a060405234801561001057600080fd5b506040516105bf3803806105bf83398101604081905261002f916100dc565b6100383361008c565b6001600160a01b03811660808190526040805133815230602082015280820192909252517f0371e6c1451d0a54cd2b7d5cf31ff881fd3e2437d82386d1529501336060f5f29181900360600190a15061010c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ee57600080fd5b81516001600160a01b038116811461010557600080fd5b9392505050565b608051610499610126600039600060e301526104996000f3fe6080604052600436106100595760003560e01c806312065fe0146100b15780634de046d5146100d457806364a197f31461011b578063715018a61461013d5780638da5cb5b14610152578063f2fde38b1461017057600080fd5b366100ac57346001600082825461007091906103cf565b909155505060405134815233907f7633918dd12eec332d7212b2ddc5cfd92b19ba6b4bca27ecc63534c3bf137b659060200160405180910390a2005b600080fd5b3480156100bd57600080fd5b506001546040519081526020015b60405180910390f35b3480156100e057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100cb565b34801561012757600080fd5b5061013b6101363660046103fc565b610190565b005b34801561014957600080fd5b5061013b6101a6565b34801561015e57600080fd5b506000546001600160a01b0316610103565b34801561017c57600080fd5b5061013b61018b366004610428565b6101ba565b610198610238565b6101a28282610292565b5050565b6101ae610238565b6101b86000610369565b565b6101c2610238565b6001600160a01b03811661022c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61023581610369565b50565b6000546001600160a01b031633146101b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610223565b6001548111156102d95760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610223565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561030f573d6000803e3d6000fd5b508060016000828254610322919061044c565b90915550506040518181526001600160a01b038316907fc70a094cb0b20f152b6d171a215827df475885ee85e81c9626d07200d7ddea429060200160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600082198211156103e2576103e26103b9565b500190565b6001600160a01b038116811461023557600080fd5b6000806040838503121561040f57600080fd5b823561041a816103e7565b946020939093013593505050565b60006020828403121561043a57600080fd5b8135610445816103e7565b9392505050565b60008282101561045e5761045e6103b9565b50039056fea264697066735822122040ccbc6b429c57334221bb5413659af583b271e2e60cbb12ff4e0d68006a75f364736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600080fdfea264697066735822122047369c23284b24f17c87456f045468156a3b0710a4f3d03e14d6dd00cc35dac864736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3383:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:54",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:54",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:54",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:54",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:54",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:54"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "199:205:54",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "209:10:54",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "218:1:54",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "213:1:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "278:63:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "303:3:54"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:1:54"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "299:3:54"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "299:11:54"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "322:3:54"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "327:1:54"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "318:3:54"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "318:11:54"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "312:5:54"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "312:18:54"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "292:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "292:39:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "292:39:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "239:1:54"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "242:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "236:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "236:13:54"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "250:19:54",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "252:15:54",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "261:1:54"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "264:2:54",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "257:3:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "257:10:54"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "252:1:54"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "232:3:54",
                    "statements": []
                  },
                  "src": "228:113:54"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "367:31:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "380:3:54"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "385:6:54"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "376:3:54"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "376:16:54"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "394:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "369:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "369:27:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "369:27:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "356:1:54"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "359:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "353:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:13:54"
                  },
                  "nodeType": "YulIf",
                  "src": "350:48:54"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "177:3:54",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "182:3:54",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "187:6:54",
                "type": ""
              }
            ],
            "src": "146:258:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "473:622:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "522:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "531:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "534:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "524:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "524:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "524:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "501:6:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "509:4:54",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "497:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "497:17:54"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "516:3:54"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "493:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "493:27:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "486:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:35:54"
                  },
                  "nodeType": "YulIf",
                  "src": "483:55:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "547:23:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "563:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "557:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:13:54"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "551:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "579:28:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "597:2:54",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "601:1:54",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "593:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "593:10:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "605:1:54",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "589:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "589:18:54"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "583:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "630:22:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "632:16:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "632:18:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "632:18:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "622:2:54"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "626:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "619:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:10:54"
                  },
                  "nodeType": "YulIf",
                  "src": "616:36:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "661:17:54",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:54",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "671:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "671:7:54"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "665:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "687:23:54",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "707:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "701:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:9:54"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "691:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "719:71:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "741:6:54"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "765:2:54"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "769:4:54",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "761:3:54"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "761:13:54"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "776:2:54"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "757:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "757:22:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "781:2:54",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "753:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "753:31:54"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "786:2:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "749:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "749:40:54"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "737:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:53:54"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "723:10:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "849:22:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "851:16:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "851:18:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "851:18:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "808:10:54"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "820:2:54"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "805:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "828:10:54"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "840:6:54"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "825:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "825:22:54"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "802:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "802:46:54"
                  },
                  "nodeType": "YulIf",
                  "src": "799:72:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "887:2:54",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "891:10:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "880:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "880:22:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "880:22:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "918:6:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "926:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:18:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "911:18:54"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "977:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "986:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "979:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "979:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "979:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "952:6:54"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "960:2:54"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "948:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "948:15:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "965:4:54",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "944:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "944:26:54"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "972:3:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "941:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:35:54"
                  },
                  "nodeType": "YulIf",
                  "src": "938:55:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1028:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1036:4:54",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1024:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1024:17:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1047:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1055:4:54",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1043:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1043:17:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1062:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1002:21:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1002:63:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1002:63:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1074:15:54",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1083:6:54"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1074:5:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "447:6:54",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "455:3:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "463:5:54",
                "type": ""
              }
            ],
            "src": "409:686:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1218:444:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1264:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1273:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1276:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1266:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1266:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1266:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1239:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1248:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1235:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1235:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1260:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1231:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1228:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1289:30:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1309:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1303:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1303:16:54"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1293:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1328:28:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1346:2:54",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1350:1:54",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1342:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1342:10:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1354:1:54",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1338:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1338:18:54"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1332:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1383:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1392:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1395:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1385:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1385:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1385:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1371:6:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1379:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1368:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:14:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1365:34:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1408:71:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1451:9:54"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1462:6:54"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1447:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1447:22:54"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1471:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1418:28:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1418:61:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1408:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1488:41:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1514:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1525:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1510:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1510:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1504:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:25:54"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1492:8:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1558:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1567:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1570:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1560:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1560:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1560:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1544:8:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1554:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1541:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:16:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1538:36:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1583:73:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1626:9:54"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1637:8:54"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1622:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1622:24:54"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1648:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1593:28:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:63:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1583:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1176:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1187:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1199:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1207:6:54",
                "type": ""
              }
            ],
            "src": "1100:562:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1717:208:54",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1727:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1747:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1741:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1741:12:54"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1731:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1769:3:54"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1774:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1762:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1762:19:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1762:19:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1816:5:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1823:4:54",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1812:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1812:16:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1834:3:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1839:4:54",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1830:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1830:14:54"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1846:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1790:21:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:63:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1790:63:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1862:57:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1877:3:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1890:6:54"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1898:2:54",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1886:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1886:15:54"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1907:2:54",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1903:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1903:7:54"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1882:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1882:29:54"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1873:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1873:39:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1914:4:54",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1869:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:50:54"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1862:3:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1694:5:54",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1701:3:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1709:3:54",
                "type": ""
              }
            ],
            "src": "1667:258:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2099:214:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2116:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2127:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2109:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2109:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2109:21:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2139:59:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2171:6:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2183:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2194:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2179:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2179:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2153:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:45:54"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "2143:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2218:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2229:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2214:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2214:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "2238:6:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2246:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2234:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2234:22:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2207:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2207:50:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2207:50:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2266:41:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2292:6:54"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2300:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2274:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2274:33:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2266:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2060:9:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2071:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2079:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2090:4:54",
                "type": ""
              }
            ],
            "src": "1930:383:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2441:102:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2451:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2463:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2474:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2459:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2451:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2493:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2508:6:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2524:3:54",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2529:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2520:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2520:11:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2533:1:54",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2516:19:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2504:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2504:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2486:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2486:51:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2486:51:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC721Version_$9100__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2410:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2421:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2432:4:54",
                "type": ""
              }
            ],
            "src": "2318:225:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2653:209:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2699:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2708:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2711:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2701:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2701:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2701:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2674:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2683:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2670:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2670:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2695:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2666:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2666:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2663:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2724:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2743:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2737:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2737:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2728:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2816:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2825:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2828:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2818:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2818:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2818:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2775:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2786:5:54"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2801:3:54",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2806:1:54",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2797:3:54"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2797:11:54"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2810:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2793:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2793:19:54"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2782:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2782:31:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2772:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2772:42:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2765:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2765:50:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2762:70:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2841:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2851:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2841:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_SimpleTreasury_$10759_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2619:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2630:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2642:6:54",
                "type": ""
              }
            ],
            "src": "2548:314:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2968:102:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2978:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2990:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3001:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2986:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2986:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2978:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3020:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3035:6:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3051:3:54",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3056:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3047:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3047:11:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3060:1:54",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3043:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3043:19:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3031:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3013:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:51:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3013:51:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2937:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2948:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2959:4:54",
                "type": ""
              }
            ],
            "src": "2867:203:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3211:170:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3221:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3233:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3244:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3229:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3229:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3221:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3263:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3278:6:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3294:3:54",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3299:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3290:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3290:11:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3303:1:54",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3286:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3286:19:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3274:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3274:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3256:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3256:51:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3256:51:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3327:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3338:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3323:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3323:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3347:6:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3363:2:54",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3367:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3359:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3359:10:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3371:1:54",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3355:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3355:18:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3343:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3343:31:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3316:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3316:59:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3316:59:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_8_by_1__to_t_address_t_uint96__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3172:9:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3183:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3191:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3202:4:54",
                "type": ""
              }
            ],
            "src": "3075:306:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n    }\n    function abi_encode_tuple_t_contract$_ERC721Version_$9100__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_SimpleTreasury_$10759_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_rational_8_by_1__to_t_address_t_uint96__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(96, 1), 1)))\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [],
  "sourceMap": "151:921:38:-:0;;;312:753;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;405:5;411:7;387:32;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;378:41:38;;;;;440:26;;;;;:::i;:::-;-1:-1:-1;;;;;2504:32:54;;;2486:51;;2474:2;2459:18;440:26:38;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;429:37:38;;;;;502:19;;;-1:-1:-1;;;502:19:38;;;;:17;;:19;;;;;;;;;;;;;;;429:37;502:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;476:46:38;;;;;;;532:5;;:41;;-1:-1:-1;;;532:41:38;;;;;2486:51:54;;;;532:24:38;;;;;;2459:18:54;;532:41:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;583:5:38;;607:15;;583:43;;-1:-1:-1;;;583:43:38;;-1:-1:-1;;;;;3274:32:54;;;583:43:38;;;3256:51:54;624:1:38;3323:18:54;;;3316:59;583:23:38;;;-1:-1:-1;583:23:38;;-1:-1:-1;3229:18:54;;583:43:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;636:5:38;;668:8;;636:42;;-1:-1:-1;;;636:42:38;;-1:-1:-1;;;;;2504:32:54;;;636:42:38;;;2486:51:54;636:23:38;;;-1:-1:-1;636:23:38;;-1:-1:-1;2459:18:54;;636:42:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:753;;151:921;;;;;;;;;;:::o;:::-;;;;;;;;:::o;14:127:54:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:258;218:1;228:113;242:6;239:1;236:13;228:113;;;318:11;;;312:18;299:11;;;292:39;264:2;257:10;228:113;;;359:6;356:1;353:13;350:48;;;394:1;385:6;380:3;376:16;369:27;350:48;;146:258;;;:::o;409:686::-;463:5;516:3;509:4;501:6;497:17;493:27;483:55;;534:1;531;524:12;483:55;557:13;;-1:-1:-1;;;;;619:10:54;;;616:36;;;632:18;;:::i;:::-;707:2;701:9;675:2;761:13;;-1:-1:-1;;757:22:54;;;781:2;753:31;749:40;737:53;;;805:18;;;825:22;;;802:46;799:72;;;851:18;;:::i;:::-;891:10;887:2;880:22;926:2;918:6;911:18;972:3;965:4;960:2;952:6;948:15;944:26;941:35;938:55;;;989:1;986;979:12;938:55;1002:63;1062:2;1055:4;1047:6;1043:17;1036:4;1028:6;1024:17;1002:63;:::i;:::-;1083:6;409:686;-1:-1:-1;;;;;;409:686:54:o;1100:562::-;1199:6;1207;1260:2;1248:9;1239:7;1235:23;1231:32;1228:52;;;1276:1;1273;1266:12;1228:52;1303:16;;-1:-1:-1;;;;;1368:14:54;;;1365:34;;;1395:1;1392;1385:12;1365:34;1418:61;1471:7;1462:6;1451:9;1447:22;1418:61;:::i;:::-;1408:71;;1525:2;1514:9;1510:18;1504:25;1488:41;;1554:2;1544:8;1541:16;1538:36;;;1570:1;1567;1560:12;1538:36;;1593:63;1648:7;1637:8;1626:9;1622:24;1593:63;:::i;:::-;1583:73;;;1100:562;;;;;:::o;1667:258::-;1709:3;1747:5;1741:12;1774:6;1769:3;1762:19;1790:63;1846:6;1839:4;1834:3;1830:14;1823:4;1816:5;1812:16;1790:63;:::i;:::-;1907:2;1886:15;-1:-1:-1;;1882:29:54;1873:39;;;;1914:4;1869:50;;1667:258;-1:-1:-1;;1667:258:54:o;1930:383::-;2127:2;2116:9;2109:21;2090:4;2153:45;2194:2;2183:9;2179:18;2171:6;2153:45;:::i;:::-;2246:9;2238:6;2234:22;2229:2;2218:9;2214:18;2207:50;2274:33;2300:6;2292;2274:33;:::i;:::-;2266:41;1930:383;-1:-1:-1;;;;;1930:383:54:o;2548:314::-;2642:6;2695:2;2683:9;2674:7;2670:23;2666:32;2663:52;;;2711:1;2708;2701:12;2663:52;2737:16;;-1:-1:-1;;;;;2782:31:54;;2772:42;;2762:70;;2828:1;2825;2818:12;2762:70;2851:5;2548:314;-1:-1:-1;;;2548:314:54:o;3075:306::-;151:921:38;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "151:921:38:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ContestGovernor.sol\";\nimport \"./ERC721Version.sol\";\nimport \"./SimpleTreasury.sol\";\n\ncontract Masterpiece {\n\n    \n    ERC721Version immutable token;\n    ContestGovernor immutable governor;\n    address immutable treasuryAddress;\n    \n    \n   \n    constructor(string memory _name, string memory _symbol) {\n        token =  new ERC721Version(_name,_symbol);\n        governor = new ContestGovernor(token);\n        treasuryAddress = address(governor.treasury());\n        token.setTreasuryAddress(treasuryAddress);\n        token.setDefaultRoyalty(treasuryAddress, 8);\n        token.transferOwnership(address(governor));\n        /**\n        Note It could have a lot of sense to add onlyOwner modifier to fileUpgrades in ERC721Version\n        Similarily a royalty deleter could make sense to in the Governor Contract\n        Finally parameters for the MyGovernor contract concerning delays could be a great add-on to this constructor and allow to move further away from hard-coded values.\n         */\n\n    }    \n\n}",
  "sourcePath": "/Users/admin/Desktop/GeneralCoding/TokenSmith/contracts/Masterpiece.sol",
  "ast": {
    "absolutePath": "project:/contracts/Masterpiece.sol",
    "exportedSymbols": {
      "Address": [
        4312
      ],
      "Checkpoints": [
        4546
      ],
      "ContestGovernor": [
        8816
      ],
      "Context": [
        4568
      ],
      "Counters": [
        4642
      ],
      "DoubleEndedQueue": [
        8733
      ],
      "ECDSA": [
        5489
      ],
      "EIP712": [
        5643
      ],
      "ERC165": [
        5667
      ],
      "ERC2981": [
        4017
      ],
      "ERC721": [
        3243
      ],
      "ERC721Enumerable": [
        3715
      ],
      "ERC721Royalty": [
        3761
      ],
      "ERC721Version": [
        9100
      ],
      "Governor": [
        1409
      ],
      "GovernorContest": [
        10162
      ],
      "GovernorVotes": [
        10204
      ],
      "GovernorVotesQuorumFraction": [
        10311
      ],
      "IERC1155Receiver": [
        2298
      ],
      "IERC165": [
        6023
      ],
      "IERC20": [
        2376
      ],
      "IERC2981": [
        2257
      ],
      "IERC721": [
        3359
      ],
      "IERC721Enumerable": [
        3792
      ],
      "IERC721Metadata": [
        3819
      ],
      "IERC721Receiver": [
        3377
      ],
      "IERC721Version": [
        10785
      ],
      "IGovernor": [
        1706
      ],
      "IGovernorContest": [
        10967
      ],
      "ISimpleTreasury": [
        10997
      ],
      "IVotes": [
        1784
      ],
      "Masterpiece": [
        10381
      ],
      "Math": [
        6541
      ],
      "Ownable": [
        112
      ],
      "SafeCast": [
        8392
      ],
      "SimpleTreasury": [
        10759
      ],
      "Slicer": [
        11192
      ],
      "Sorter": [
        11365
      ],
      "Strings": [
        4868
      ],
      "Timers": [
        5082
      ],
      "Votes": [
        2238
      ]
    },
    "id": 10382,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10313,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:38"
      },
      {
        "absolutePath": "project:/contracts/ContestGovernor.sol",
        "file": "./ContestGovernor.sol",
        "id": 10314,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10382,
        "sourceUnit": 8817,
        "src": "57:31:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Version.sol",
        "file": "./ERC721Version.sol",
        "id": 10315,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10382,
        "sourceUnit": 9101,
        "src": "89:29:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/SimpleTreasury.sol",
        "file": "./SimpleTreasury.sol",
        "id": 10316,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10382,
        "sourceUnit": 10760,
        "src": "119:30:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Masterpiece",
        "contractDependencies": [
          8816,
          9100
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10381,
        "linearizedBaseContracts": [
          10381
        ],
        "name": "Masterpiece",
        "nameLocation": "160:11:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10319,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "208:5:38",
            "nodeType": "VariableDeclaration",
            "scope": 10381,
            "src": "184:29:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721Version_$9100",
              "typeString": "contract ERC721Version"
            },
            "typeName": {
              "id": 10318,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10317,
                "name": "ERC721Version",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9100,
                "src": "184:13:38"
              },
              "referencedDeclaration": 9100,
              "src": "184:13:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Version_$9100",
                "typeString": "contract ERC721Version"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10322,
            "mutability": "immutable",
            "name": "governor",
            "nameLocation": "245:8:38",
            "nodeType": "VariableDeclaration",
            "scope": 10381,
            "src": "219:34:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ContestGovernor_$8816",
              "typeString": "contract ContestGovernor"
            },
            "typeName": {
              "id": 10321,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10320,
                "name": "ContestGovernor",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8816,
                "src": "219:15:38"
              },
              "referencedDeclaration": 8816,
              "src": "219:15:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                "typeString": "contract ContestGovernor"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10324,
            "mutability": "immutable",
            "name": "treasuryAddress",
            "nameLocation": "277:15:38",
            "nodeType": "VariableDeclaration",
            "scope": 10381,
            "src": "259:33:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10323,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10379,
              "nodeType": "Block",
              "src": "368:697:38",
              "statements": [
                {
                  "expression": {
                    "id": 10338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10331,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10319,
                      "src": "378:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721Version_$9100",
                        "typeString": "contract ERC721Version"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10335,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10326,
                          "src": "405:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 10336,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10328,
                          "src": "411:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 10334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "387:17:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC721Version_$9100_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC721Version)"
                        },
                        "typeName": {
                          "id": 10333,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 10332,
                            "name": "ERC721Version",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9100,
                            "src": "391:13:38"
                          },
                          "referencedDeclaration": 9100,
                          "src": "391:13:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Version_$9100",
                            "typeString": "contract ERC721Version"
                          }
                        }
                      },
                      "id": 10337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "387:32:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721Version_$9100",
                        "typeString": "contract ERC721Version"
                      }
                    },
                    "src": "378:41:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721Version_$9100",
                      "typeString": "contract ERC721Version"
                    }
                  },
                  "id": 10339,
                  "nodeType": "ExpressionStatement",
                  "src": "378:41:38"
                },
                {
                  "expression": {
                    "id": 10346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10340,
                      "name": "governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10322,
                      "src": "429:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                        "typeString": "contract ContestGovernor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10344,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10319,
                          "src": "460:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Version_$9100",
                            "typeString": "contract ERC721Version"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC721Version_$9100",
                            "typeString": "contract ERC721Version"
                          }
                        ],
                        "id": 10343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "440:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC721Version_$9100_$returns$_t_contract$_ContestGovernor_$8816_$",
                          "typeString": "function (contract ERC721Version) returns (contract ContestGovernor)"
                        },
                        "typeName": {
                          "id": 10342,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 10341,
                            "name": "ContestGovernor",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8816,
                            "src": "444:15:38"
                          },
                          "referencedDeclaration": 8816,
                          "src": "444:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                            "typeString": "contract ContestGovernor"
                          }
                        }
                      },
                      "id": 10345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "440:26:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                        "typeString": "contract ContestGovernor"
                      }
                    },
                    "src": "429:37:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                      "typeString": "contract ContestGovernor"
                    }
                  },
                  "id": 10347,
                  "nodeType": "ExpressionStatement",
                  "src": "429:37:38"
                },
                {
                  "expression": {
                    "id": 10355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10348,
                      "name": "treasuryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10324,
                      "src": "476:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10351,
                              "name": "governor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10322,
                              "src": "502:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                                "typeString": "contract ContestGovernor"
                              }
                            },
                            "id": 10352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "treasury",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9192,
                            "src": "502:17:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_SimpleTreasury_$10759_$",
                              "typeString": "function () view external returns (contract SimpleTreasury)"
                            }
                          },
                          "id": 10353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "502:19:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleTreasury_$10759",
                            "typeString": "contract SimpleTreasury"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SimpleTreasury_$10759",
                            "typeString": "contract SimpleTreasury"
                          }
                        ],
                        "id": 10350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "494:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10349,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "494:7:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "494:28:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "476:46:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10356,
                  "nodeType": "ExpressionStatement",
                  "src": "476:46:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10360,
                        "name": "treasuryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10324,
                        "src": "557:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10357,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10319,
                        "src": "532:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Version_$9100",
                          "typeString": "contract ERC721Version"
                        }
                      },
                      "id": 10359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setTreasuryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8933,
                      "src": "532:24:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "532:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10362,
                  "nodeType": "ExpressionStatement",
                  "src": "532:41:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10366,
                        "name": "treasuryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10324,
                        "src": "607:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "38",
                        "id": 10367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "624:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        }
                      ],
                      "expression": {
                        "id": 10363,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10319,
                        "src": "583:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Version_$9100",
                          "typeString": "contract ERC721Version"
                        }
                      },
                      "id": 10365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDefaultRoyalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9086,
                      "src": "583:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint96_$returns$__$",
                        "typeString": "function (address,uint96) external"
                      }
                    },
                    "id": 10368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "583:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10369,
                  "nodeType": "ExpressionStatement",
                  "src": "583:43:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10375,
                            "name": "governor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10322,
                            "src": "668:8:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                              "typeString": "contract ContestGovernor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                              "typeString": "contract ContestGovernor"
                            }
                          ],
                          "id": 10374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "660:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10373,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "660:7:38",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "660:17:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10370,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10319,
                        "src": "636:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Version_$9100",
                          "typeString": "contract ERC721Version"
                        }
                      },
                      "id": 10372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "636:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "636:42:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10378,
                  "nodeType": "ExpressionStatement",
                  "src": "636:42:38"
                }
              ]
            },
            "id": 10380,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10326,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "338:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 10380,
                  "src": "324:19:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10325,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10328,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "359:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 10380,
                  "src": "345:21:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10327,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "323:44:38"
            },
            "returnParameters": {
              "id": 10330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "368:0:38"
            },
            "scope": 10381,
            "src": "312:753:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10382,
        "src": "151:921:38",
        "usedErrors": []
      }
    ],
    "src": "32:1040:38"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Masterpiece.sol",
    "exportedSymbols": {
      "Address": [
        4312
      ],
      "Checkpoints": [
        4546
      ],
      "ContestGovernor": [
        8816
      ],
      "Context": [
        4568
      ],
      "Counters": [
        4642
      ],
      "DoubleEndedQueue": [
        8733
      ],
      "ECDSA": [
        5489
      ],
      "EIP712": [
        5643
      ],
      "ERC165": [
        5667
      ],
      "ERC2981": [
        4017
      ],
      "ERC721": [
        3243
      ],
      "ERC721Enumerable": [
        3715
      ],
      "ERC721Royalty": [
        3761
      ],
      "ERC721Version": [
        9100
      ],
      "Governor": [
        1409
      ],
      "GovernorContest": [
        10162
      ],
      "GovernorVotes": [
        10204
      ],
      "GovernorVotesQuorumFraction": [
        10311
      ],
      "IERC1155Receiver": [
        2298
      ],
      "IERC165": [
        6023
      ],
      "IERC20": [
        2376
      ],
      "IERC2981": [
        2257
      ],
      "IERC721": [
        3359
      ],
      "IERC721Enumerable": [
        3792
      ],
      "IERC721Metadata": [
        3819
      ],
      "IERC721Receiver": [
        3377
      ],
      "IERC721Version": [
        10785
      ],
      "IGovernor": [
        1706
      ],
      "IGovernorContest": [
        10967
      ],
      "ISimpleTreasury": [
        10997
      ],
      "IVotes": [
        1784
      ],
      "Masterpiece": [
        10381
      ],
      "Math": [
        6541
      ],
      "Ownable": [
        112
      ],
      "SafeCast": [
        8392
      ],
      "SimpleTreasury": [
        10759
      ],
      "Slicer": [
        11192
      ],
      "Sorter": [
        11365
      ],
      "Strings": [
        4868
      ],
      "Timers": [
        5082
      ],
      "Votes": [
        2238
      ]
    },
    "id": 10382,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10313,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:38"
      },
      {
        "absolutePath": "project:/contracts/ContestGovernor.sol",
        "file": "./ContestGovernor.sol",
        "id": 10314,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10382,
        "sourceUnit": 8817,
        "src": "57:31:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Version.sol",
        "file": "./ERC721Version.sol",
        "id": 10315,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10382,
        "sourceUnit": 9101,
        "src": "89:29:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/SimpleTreasury.sol",
        "file": "./SimpleTreasury.sol",
        "id": 10316,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10382,
        "sourceUnit": 10760,
        "src": "119:30:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Masterpiece",
        "contractDependencies": [
          8816,
          9100
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10381,
        "linearizedBaseContracts": [
          10381
        ],
        "name": "Masterpiece",
        "nameLocation": "160:11:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10319,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "208:5:38",
            "nodeType": "VariableDeclaration",
            "scope": 10381,
            "src": "184:29:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721Version_$9100",
              "typeString": "contract ERC721Version"
            },
            "typeName": {
              "id": 10318,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10317,
                "name": "ERC721Version",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9100,
                "src": "184:13:38"
              },
              "referencedDeclaration": 9100,
              "src": "184:13:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Version_$9100",
                "typeString": "contract ERC721Version"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10322,
            "mutability": "immutable",
            "name": "governor",
            "nameLocation": "245:8:38",
            "nodeType": "VariableDeclaration",
            "scope": 10381,
            "src": "219:34:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ContestGovernor_$8816",
              "typeString": "contract ContestGovernor"
            },
            "typeName": {
              "id": 10321,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10320,
                "name": "ContestGovernor",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8816,
                "src": "219:15:38"
              },
              "referencedDeclaration": 8816,
              "src": "219:15:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                "typeString": "contract ContestGovernor"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10324,
            "mutability": "immutable",
            "name": "treasuryAddress",
            "nameLocation": "277:15:38",
            "nodeType": "VariableDeclaration",
            "scope": 10381,
            "src": "259:33:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10323,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10379,
              "nodeType": "Block",
              "src": "368:697:38",
              "statements": [
                {
                  "expression": {
                    "id": 10338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10331,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10319,
                      "src": "378:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721Version_$9100",
                        "typeString": "contract ERC721Version"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10335,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10326,
                          "src": "405:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 10336,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10328,
                          "src": "411:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 10334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "387:17:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC721Version_$9100_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC721Version)"
                        },
                        "typeName": {
                          "id": 10333,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 10332,
                            "name": "ERC721Version",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9100,
                            "src": "391:13:38"
                          },
                          "referencedDeclaration": 9100,
                          "src": "391:13:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Version_$9100",
                            "typeString": "contract ERC721Version"
                          }
                        }
                      },
                      "id": 10337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "387:32:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721Version_$9100",
                        "typeString": "contract ERC721Version"
                      }
                    },
                    "src": "378:41:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721Version_$9100",
                      "typeString": "contract ERC721Version"
                    }
                  },
                  "id": 10339,
                  "nodeType": "ExpressionStatement",
                  "src": "378:41:38"
                },
                {
                  "expression": {
                    "id": 10346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10340,
                      "name": "governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10322,
                      "src": "429:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                        "typeString": "contract ContestGovernor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10344,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10319,
                          "src": "460:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Version_$9100",
                            "typeString": "contract ERC721Version"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC721Version_$9100",
                            "typeString": "contract ERC721Version"
                          }
                        ],
                        "id": 10343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "440:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC721Version_$9100_$returns$_t_contract$_ContestGovernor_$8816_$",
                          "typeString": "function (contract ERC721Version) returns (contract ContestGovernor)"
                        },
                        "typeName": {
                          "id": 10342,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 10341,
                            "name": "ContestGovernor",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8816,
                            "src": "444:15:38"
                          },
                          "referencedDeclaration": 8816,
                          "src": "444:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                            "typeString": "contract ContestGovernor"
                          }
                        }
                      },
                      "id": 10345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "440:26:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                        "typeString": "contract ContestGovernor"
                      }
                    },
                    "src": "429:37:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                      "typeString": "contract ContestGovernor"
                    }
                  },
                  "id": 10347,
                  "nodeType": "ExpressionStatement",
                  "src": "429:37:38"
                },
                {
                  "expression": {
                    "id": 10355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10348,
                      "name": "treasuryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10324,
                      "src": "476:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10351,
                              "name": "governor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10322,
                              "src": "502:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                                "typeString": "contract ContestGovernor"
                              }
                            },
                            "id": 10352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "treasury",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9192,
                            "src": "502:17:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_SimpleTreasury_$10759_$",
                              "typeString": "function () view external returns (contract SimpleTreasury)"
                            }
                          },
                          "id": 10353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "502:19:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleTreasury_$10759",
                            "typeString": "contract SimpleTreasury"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SimpleTreasury_$10759",
                            "typeString": "contract SimpleTreasury"
                          }
                        ],
                        "id": 10350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "494:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10349,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "494:7:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "494:28:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "476:46:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10356,
                  "nodeType": "ExpressionStatement",
                  "src": "476:46:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10360,
                        "name": "treasuryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10324,
                        "src": "557:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10357,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10319,
                        "src": "532:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Version_$9100",
                          "typeString": "contract ERC721Version"
                        }
                      },
                      "id": 10359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setTreasuryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8933,
                      "src": "532:24:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "532:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10362,
                  "nodeType": "ExpressionStatement",
                  "src": "532:41:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10366,
                        "name": "treasuryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10324,
                        "src": "607:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "38",
                        "id": 10367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "624:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        }
                      ],
                      "expression": {
                        "id": 10363,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10319,
                        "src": "583:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Version_$9100",
                          "typeString": "contract ERC721Version"
                        }
                      },
                      "id": 10365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDefaultRoyalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9086,
                      "src": "583:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint96_$returns$__$",
                        "typeString": "function (address,uint96) external"
                      }
                    },
                    "id": 10368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "583:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10369,
                  "nodeType": "ExpressionStatement",
                  "src": "583:43:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10375,
                            "name": "governor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10322,
                            "src": "668:8:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                              "typeString": "contract ContestGovernor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ContestGovernor_$8816",
                              "typeString": "contract ContestGovernor"
                            }
                          ],
                          "id": 10374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "660:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10373,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "660:7:38",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "660:17:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10370,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10319,
                        "src": "636:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Version_$9100",
                          "typeString": "contract ERC721Version"
                        }
                      },
                      "id": 10372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "636:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "636:42:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10378,
                  "nodeType": "ExpressionStatement",
                  "src": "636:42:38"
                }
              ]
            },
            "id": 10380,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10326,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "338:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 10380,
                  "src": "324:19:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10325,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10328,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "359:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 10380,
                  "src": "345:21:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10327,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "323:44:38"
            },
            "returnParameters": {
              "id": 10330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "368:0:38"
            },
            "scope": 10381,
            "src": "312:753:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10382,
        "src": "151:921:38",
        "usedErrors": []
      }
    ],
    "src": "32:1040:38"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-08-15T10:35:57.435Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}